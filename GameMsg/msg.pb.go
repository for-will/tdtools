//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: msg.proto

package GameMsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 所有协议的返回值
type ReturnCode int32

const (
	ReturnCode_OK                             ReturnCode = 0
	ReturnCode_AccountCheck_UNKONWN           ReturnCode = 1
	ReturnCode_AccountCheck_NOT_FOUND_ACCOUNT ReturnCode = 2
	ReturnCode_AccountCheck_PASSWORD_WRONG    ReturnCode = 3
	ReturnCode_AccountCheck_LOGGING           ReturnCode = 4   // 正在登录
	ReturnCode_AccountCheck_TIMEOUT           ReturnCode = 5   // 超时
	ReturnCode_AccountCheck_ONLINE            ReturnCode = 6   // 已在线
	ReturnCode_CreatePlayer_Exit              ReturnCode = 10  // 角色已存在
	ReturnCode_ReLoginFailed                  ReturnCode = 20  //断线重连失败
	ReturnCode_ChangeTeamInvalidTeam          ReturnCode = 30  // 无效的队伍
	ReturnCode_ChangeTeamInvalidHero          ReturnCode = 31  // 无效的英雄
	ReturnCode_ChangeTeamInvalidSolider       ReturnCode = 32  // 无效的士兵
	ReturnCode_EnterStage_Forbid              ReturnCode = 100 // 不能进该关卡
	ReturnCode_OverStage_Failed               ReturnCode = 110 // 结束战场失败
	// 英雄升级失败
	ReturnCode_QualityUp_NoHero   ReturnCode = 120 // 没有找到英雄
	ReturnCode_QualityUp_MaxLv    ReturnCode = 121 // 已达最高等级
	ReturnCode_QualityUp_NoToken  ReturnCode = 122 // 信物不足
	ReturnCode_QualityUp_NoConfig ReturnCode = 123 // 配置错误
	// 解锁军团或建筑
	ReturnCode_UnlockUnitInvalidID ReturnCode = 126 // 无效的cardId
	ReturnCode_UnlockUnitAgain     ReturnCode = 127 // 军团或建筑已经解锁
	ReturnCode_UnlockUnitNoneItem  ReturnCode = 128 // 缺少道具
	//任务领奖失败
	ReturnCode_TaskReward_NotFinished ReturnCode = 130 // 任务未完成
	ReturnCode_TaskReward_Rewarded    ReturnCode = 131 // 任务奖励已领取
	ReturnCode_TaskReward_MaxItems    ReturnCode = 132 // 奖励物品已达上限
	// 探索失败
	ReturnCode_ExploreUnknownArea    ReturnCode = 140 // 探索区域配置不存在
	ReturnCode_ExploreAreaLocked     ReturnCode = 141 // 区域未解锁
	ReturnCode_ExploreAssetsShortage ReturnCode = 142 // 探索券不足
	// 解锁英雄
	ReturnCode_UnlockCardInvalidID ReturnCode = 143 // 无效的cardId
	ReturnCode_UnlockCardAgain     ReturnCode = 144 // 英雄已经解锁
	ReturnCode_UnlockCardNoneToken ReturnCode = 145 // 缺少信物
	// 装备
	ReturnCode_EquipIlleagalSlot   ReturnCode = 146 // 非法槽位
	ReturnCode_EquipmentSysNotOpen ReturnCode = 147 // 功能未开放
	// 玩家天赋
	ReturnCode_PlayerTalentInvalidId  ReturnCode = 148 // 无效的id
	ReturnCode_PlayerTalentUnlockCond ReturnCode = 149 // 解锁条件未达到
	ReturnCode_PlayerTalentLvMax      ReturnCode = 150 // 天赋等级已达上限
	ReturnCode_PlayerTalentCostItem   ReturnCode = 151 // 道具不足
	// 英雄天赋
	ReturnCode_HeroTalentInvalidCard      ReturnCode = 152 // 无效的card
	ReturnCode_HeroTalentInvalidPage      ReturnCode = 153 // 无效的天赋页
	ReturnCode_HeroTalentCheckHeroLv      ReturnCode = 154 // 英雄等级不足
	ReturnCode_HeroTalentCostItem         ReturnCode = 155 // 道具不足
	ReturnCode_HeroTalentCheckHeroQuality ReturnCode = 156 // 英雄品级不足
	ReturnCode_HeroTalentInvalidId        ReturnCode = 157 // 无效的天赋id
	ReturnCode_HeroTalentPageNameLenMax   ReturnCode = 158 // 名称超长
	ReturnCode_HeroTalentLvMax            ReturnCode = 159 // 天赋等级已达上限
	// 使用道具
	ReturnCode_UseItemInvalidId     ReturnCode = 160 // 无效的道具ID
	ReturnCode_UseItemNotEnoughItem ReturnCode = 161 // 道具数量不足
	ReturnCode_UseItemCannotUse     ReturnCode = 162 // 道具不可使用
	// 聊天
	ReturnCode_OfflineChatMsgMax ReturnCode = 165 // 离线消息已达上限
	// 战利品
	ReturnCode_LootMissionInvalidId  ReturnCode = 170 // 无效的Id
	ReturnCode_LootMissionProcessing ReturnCode = 171 // 任务还未完成
	ReturnCode_LootMissionRewarded   ReturnCode = 172 // 任务奖励已经领取
	ReturnCode_LootMissionConfigNil  ReturnCode = 173 // 任务配置文件未找到
	ReturnCode_PlaceLootFailed       ReturnCode = 174 // 放置战利品失败
	// 修改昵称/头像
	ReturnCode_ModifyNameAssertDemanded ReturnCode = 175 // 物品不足
	ReturnCode_ModifyNameUsed           ReturnCode = 176 // 昵称已被使用
	ReturnCode_ModifyNameError          ReturnCode = 177 // 修改昵称失败
	ReturnCode_ModifyAvatarFailed       ReturnCode = 178 // 修改头像失败
)

// Enum value maps for ReturnCode.
var (
	ReturnCode_name = map[int32]string{
		0:   "OK",
		1:   "AccountCheck_UNKONWN",
		2:   "AccountCheck_NOT_FOUND_ACCOUNT",
		3:   "AccountCheck_PASSWORD_WRONG",
		4:   "AccountCheck_LOGGING",
		5:   "AccountCheck_TIMEOUT",
		6:   "AccountCheck_ONLINE",
		10:  "CreatePlayer_Exit",
		20:  "ReLoginFailed",
		30:  "ChangeTeamInvalidTeam",
		31:  "ChangeTeamInvalidHero",
		32:  "ChangeTeamInvalidSolider",
		100: "EnterStage_Forbid",
		110: "OverStage_Failed",
		120: "QualityUp_NoHero",
		121: "QualityUp_MaxLv",
		122: "QualityUp_NoToken",
		123: "QualityUp_NoConfig",
		126: "UnlockUnitInvalidID",
		127: "UnlockUnitAgain",
		128: "UnlockUnitNoneItem",
		130: "TaskReward_NotFinished",
		131: "TaskReward_Rewarded",
		132: "TaskReward_MaxItems",
		140: "ExploreUnknownArea",
		141: "ExploreAreaLocked",
		142: "ExploreAssetsShortage",
		143: "UnlockCardInvalidID",
		144: "UnlockCardAgain",
		145: "UnlockCardNoneToken",
		146: "EquipIlleagalSlot",
		147: "EquipmentSysNotOpen",
		148: "PlayerTalentInvalidId",
		149: "PlayerTalentUnlockCond",
		150: "PlayerTalentLvMax",
		151: "PlayerTalentCostItem",
		152: "HeroTalentInvalidCard",
		153: "HeroTalentInvalidPage",
		154: "HeroTalentCheckHeroLv",
		155: "HeroTalentCostItem",
		156: "HeroTalentCheckHeroQuality",
		157: "HeroTalentInvalidId",
		158: "HeroTalentPageNameLenMax",
		159: "HeroTalentLvMax",
		160: "UseItemInvalidId",
		161: "UseItemNotEnoughItem",
		162: "UseItemCannotUse",
		165: "OfflineChatMsgMax",
		170: "LootMissionInvalidId",
		171: "LootMissionProcessing",
		172: "LootMissionRewarded",
		173: "LootMissionConfigNil",
		174: "PlaceLootFailed",
		175: "ModifyNameAssertDemanded",
		176: "ModifyNameUsed",
		177: "ModifyNameError",
		178: "ModifyAvatarFailed",
	}
	ReturnCode_value = map[string]int32{
		"OK":                             0,
		"AccountCheck_UNKONWN":           1,
		"AccountCheck_NOT_FOUND_ACCOUNT": 2,
		"AccountCheck_PASSWORD_WRONG":    3,
		"AccountCheck_LOGGING":           4,
		"AccountCheck_TIMEOUT":           5,
		"AccountCheck_ONLINE":            6,
		"CreatePlayer_Exit":              10,
		"ReLoginFailed":                  20,
		"ChangeTeamInvalidTeam":          30,
		"ChangeTeamInvalidHero":          31,
		"ChangeTeamInvalidSolider":       32,
		"EnterStage_Forbid":              100,
		"OverStage_Failed":               110,
		"QualityUp_NoHero":               120,
		"QualityUp_MaxLv":                121,
		"QualityUp_NoToken":              122,
		"QualityUp_NoConfig":             123,
		"UnlockUnitInvalidID":            126,
		"UnlockUnitAgain":                127,
		"UnlockUnitNoneItem":             128,
		"TaskReward_NotFinished":         130,
		"TaskReward_Rewarded":            131,
		"TaskReward_MaxItems":            132,
		"ExploreUnknownArea":             140,
		"ExploreAreaLocked":              141,
		"ExploreAssetsShortage":          142,
		"UnlockCardInvalidID":            143,
		"UnlockCardAgain":                144,
		"UnlockCardNoneToken":            145,
		"EquipIlleagalSlot":              146,
		"EquipmentSysNotOpen":            147,
		"PlayerTalentInvalidId":          148,
		"PlayerTalentUnlockCond":         149,
		"PlayerTalentLvMax":              150,
		"PlayerTalentCostItem":           151,
		"HeroTalentInvalidCard":          152,
		"HeroTalentInvalidPage":          153,
		"HeroTalentCheckHeroLv":          154,
		"HeroTalentCostItem":             155,
		"HeroTalentCheckHeroQuality":     156,
		"HeroTalentInvalidId":            157,
		"HeroTalentPageNameLenMax":       158,
		"HeroTalentLvMax":                159,
		"UseItemInvalidId":               160,
		"UseItemNotEnoughItem":           161,
		"UseItemCannotUse":               162,
		"OfflineChatMsgMax":              165,
		"LootMissionInvalidId":           170,
		"LootMissionProcessing":          171,
		"LootMissionRewarded":            172,
		"LootMissionConfigNil":           173,
		"PlaceLootFailed":                174,
		"ModifyNameAssertDemanded":       175,
		"ModifyNameUsed":                 176,
		"ModifyNameError":                177,
		"ModifyAvatarFailed":             178,
	}
)

func (x ReturnCode) Enum() *ReturnCode {
	p := new(ReturnCode)
	*p = x
	return p
}

func (x ReturnCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReturnCode) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[0].Descriptor()
}

func (ReturnCode) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[0]
}

func (x ReturnCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ReturnCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ReturnCode(num)
	return nil
}

// Deprecated: Use ReturnCode.Descriptor instead.
func (ReturnCode) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

type ExploreTimes int32

const (
	ExploreTimes_Single ExploreTimes = 1 // 探索一次
	ExploreTimes_Ten    ExploreTimes = 2 // 探索10次
)

// Enum value maps for ExploreTimes.
var (
	ExploreTimes_name = map[int32]string{
		1: "Single",
		2: "Ten",
	}
	ExploreTimes_value = map[string]int32{
		"Single": 1,
		"Ten":    2,
	}
)

func (x ExploreTimes) Enum() *ExploreTimes {
	p := new(ExploreTimes)
	*p = x
	return p
}

func (x ExploreTimes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExploreTimes) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[1].Descriptor()
}

func (ExploreTimes) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[1]
}

func (x ExploreTimes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ExploreTimes) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ExploreTimes(num)
	return nil
}

// Deprecated: Use ExploreTimes.Descriptor instead.
func (ExploreTimes) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

type LootMission_Status int32

const (
	LootMission_Processing LootMission_Status = 0 // 未完成
	LootMission_Finished   LootMission_Status = 1 // 待领取
	LootMission_Rewarded   LootMission_Status = 2 // 已领取
)

// Enum value maps for LootMission_Status.
var (
	LootMission_Status_name = map[int32]string{
		0: "Processing",
		1: "Finished",
		2: "Rewarded",
	}
	LootMission_Status_value = map[string]int32{
		"Processing": 0,
		"Finished":   1,
		"Rewarded":   2,
	}
)

func (x LootMission_Status) Enum() *LootMission_Status {
	p := new(LootMission_Status)
	*p = x
	return p
}

func (x LootMission_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LootMission_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[2].Descriptor()
}

func (LootMission_Status) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[2]
}

func (x LootMission_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LootMission_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LootMission_Status(num)
	return nil
}

// Deprecated: Use LootMission_Status.Descriptor instead.
func (LootMission_Status) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{102, 0}
}

// 水晶 (装备) 属性
type AttrItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *int32 `protobuf:"varint,1,opt,name=Type" json:"Type,omitempty"` // 属性类型
	Lv   *int32 `protobuf:"varint,2,opt,name=Lv" json:"Lv,omitempty"`     // 属性等级
	Idx  *int32 `protobuf:"varint,3,opt,name=Idx" json:"Idx,omitempty"`   // 位置
}

func (x *AttrItem) Reset() {
	*x = AttrItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttrItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttrItem) ProtoMessage() {}

func (x *AttrItem) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttrItem.ProtoReflect.Descriptor instead.
func (*AttrItem) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

func (x *AttrItem) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *AttrItem) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *AttrItem) GetIdx() int32 {
	if x != nil && x.Idx != nil {
		return *x.Idx
	}
	return 0
}

// 水晶
type CrystalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn        *int32      `protobuf:"varint,1,opt,name=Sn" json:"Sn,omitempty"`
	Id        *int32      `protobuf:"varint,2,opt,name=Id" json:"Id,omitempty"`
	CreatedAt *int32      `protobuf:"varint,3,opt,name=CreatedAt" json:"CreatedAt,omitempty"` // 获得时间
	HeroSn    *int32      `protobuf:"varint,4,opt,name=HeroSn" json:"HeroSn,omitempty"`
	Slot      *int32      `protobuf:"varint,5,opt,name=Slot" json:"Slot,omitempty"`       // 槽位
	Attrs     []*AttrItem `protobuf:"bytes,6,rep,name=Attrs" json:"Attrs,omitempty"`      // 属性
	SkillId   *int32      `protobuf:"varint,7,opt,name=SkillId" json:"SkillId,omitempty"` // 扩展属性
}

func (x *CrystalInfo) Reset() {
	*x = CrystalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalInfo) ProtoMessage() {}

func (x *CrystalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalInfo.ProtoReflect.Descriptor instead.
func (*CrystalInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

func (x *CrystalInfo) GetSn() int32 {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return 0
}

func (x *CrystalInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CrystalInfo) GetCreatedAt() int32 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *CrystalInfo) GetHeroSn() int32 {
	if x != nil && x.HeroSn != nil {
		return *x.HeroSn
	}
	return 0
}

func (x *CrystalInfo) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

func (x *CrystalInfo) GetAttrs() []*AttrItem {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *CrystalInfo) GetSkillId() int32 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceModel  *string `protobuf:"bytes,1,opt,name=DeviceModel" json:"DeviceModel,omitempty"`    // 设备型号
	DeviceHeight *int32  `protobuf:"varint,2,opt,name=DeviceHeight" json:"DeviceHeight,omitempty"` //
	DeviceWidth  *int32  `protobuf:"varint,3,opt,name=DeviceWidth" json:"DeviceWidth,omitempty"`   //
	OsName       *string `protobuf:"bytes,4,opt,name=OsName" json:"OsName,omitempty"`              // 操作系统
	OsVer        *string `protobuf:"bytes,5,opt,name=OsVer" json:"OsVer,omitempty"`                // 操作系统版本
	MacAddr      *string `protobuf:"bytes,6,opt,name=MacAddr" json:"MacAddr,omitempty"`            // 设备mac地址
	Udid         *string `protobuf:"bytes,7,opt,name=Udid" json:"Udid,omitempty"`                  // 设备唯一标示符
	Idfa         *string `protobuf:"bytes,8,opt,name=Idfa" json:"Idfa,omitempty"`                  // 广告标识
	AppChannel   *string `protobuf:"bytes,9,opt,name=AppChannel" json:"AppChannel,omitempty"`      // 运营渠道
	AppVer       *string `protobuf:"bytes,10,opt,name=AppVer" json:"AppVer,omitempty"`             // 客户端版本号
	Server       *string `protobuf:"bytes,11,opt,name=Server" json:"Server,omitempty"`             // 游戏服
	AccountId    *string `protobuf:"bytes,12,opt,name=AccountId" json:"AccountId,omitempty"`       // 账号唯一标识符
	OldAccountId *string `protobuf:"bytes,13,opt,name=OldAccountId" json:"OldAccountId,omitempty"` // 游客身份标识符
	RoleId       *string `protobuf:"bytes,14,opt,name=RoleId" json:"RoleId,omitempty"`             // 角色唯一标识符
	RoleName     *string `protobuf:"bytes,15,opt,name=RoleName" json:"RoleName,omitempty"`         //
	SdkVer       *string `protobuf:"bytes,16,opt,name=SdkVer" json:"SdkVer,omitempty"`             // SDK版本号
	IMEI         *string `protobuf:"bytes,17,opt,name=IMEI" json:"IMEI,omitempty"`                 // 移动设备国际身份码
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceInfo) GetDeviceModel() string {
	if x != nil && x.DeviceModel != nil {
		return *x.DeviceModel
	}
	return ""
}

func (x *DeviceInfo) GetDeviceHeight() int32 {
	if x != nil && x.DeviceHeight != nil {
		return *x.DeviceHeight
	}
	return 0
}

func (x *DeviceInfo) GetDeviceWidth() int32 {
	if x != nil && x.DeviceWidth != nil {
		return *x.DeviceWidth
	}
	return 0
}

func (x *DeviceInfo) GetOsName() string {
	if x != nil && x.OsName != nil {
		return *x.OsName
	}
	return ""
}

func (x *DeviceInfo) GetOsVer() string {
	if x != nil && x.OsVer != nil {
		return *x.OsVer
	}
	return ""
}

func (x *DeviceInfo) GetMacAddr() string {
	if x != nil && x.MacAddr != nil {
		return *x.MacAddr
	}
	return ""
}

func (x *DeviceInfo) GetUdid() string {
	if x != nil && x.Udid != nil {
		return *x.Udid
	}
	return ""
}

func (x *DeviceInfo) GetIdfa() string {
	if x != nil && x.Idfa != nil {
		return *x.Idfa
	}
	return ""
}

func (x *DeviceInfo) GetAppChannel() string {
	if x != nil && x.AppChannel != nil {
		return *x.AppChannel
	}
	return ""
}

func (x *DeviceInfo) GetAppVer() string {
	if x != nil && x.AppVer != nil {
		return *x.AppVer
	}
	return ""
}

func (x *DeviceInfo) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

func (x *DeviceInfo) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *DeviceInfo) GetOldAccountId() string {
	if x != nil && x.OldAccountId != nil {
		return *x.OldAccountId
	}
	return ""
}

func (x *DeviceInfo) GetRoleId() string {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return ""
}

func (x *DeviceInfo) GetRoleName() string {
	if x != nil && x.RoleName != nil {
		return *x.RoleName
	}
	return ""
}

func (x *DeviceInfo) GetSdkVer() string {
	if x != nil && x.SdkVer != nil {
		return *x.SdkVer
	}
	return ""
}

func (x *DeviceInfo) GetIMEI() string {
	if x != nil && x.IMEI != nil {
		return *x.IMEI
	}
	return ""
}

type AccountCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  *string     `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	Password *string     `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	Device   *DeviceInfo `protobuf:"bytes,3,opt,name=Device" json:"Device,omitempty"`
}

func (x *AccountCheck) Reset() {
	*x = AccountCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCheck) ProtoMessage() {}

func (x *AccountCheck) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCheck.ProtoReflect.Descriptor instead.
func (*AccountCheck) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{3}
}

func (x *AccountCheck) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *AccountCheck) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *AccountCheck) GetDevice() *DeviceInfo {
	if x != nil {
		return x.Device
	}
	return nil
}

type AccountCheckRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
}

func (x *AccountCheckRs) Reset() {
	*x = AccountCheckRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCheckRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCheckRs) ProtoMessage() {}

func (x *AccountCheckRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCheckRs.ProtoReflect.Descriptor instead.
func (*AccountCheckRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{4}
}

func (x *AccountCheckRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

type SdkLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SauthJson *string     `protobuf:"bytes,1,opt,name=SauthJson" json:"SauthJson,omitempty"`
	Device    *DeviceInfo `protobuf:"bytes,2,opt,name=Device" json:"Device,omitempty"`
}

func (x *SdkLogin) Reset() {
	*x = SdkLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkLogin) ProtoMessage() {}

func (x *SdkLogin) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkLogin.ProtoReflect.Descriptor instead.
func (*SdkLogin) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{5}
}

func (x *SdkLogin) GetSauthJson() string {
	if x != nil && x.SauthJson != nil {
		return *x.SauthJson
	}
	return ""
}

func (x *SdkLogin) GetDevice() *DeviceInfo {
	if x != nil {
		return x.Device
	}
	return nil
}

type SdkLoginRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode      *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Code            *int32      `protobuf:"varint,2,opt,name=Code" json:"Code,omitempty"`
	SubCode         *int32      `protobuf:"varint,3,opt,name=SubCode" json:"SubCode,omitempty"`
	UnisdkLoginJson *string     `protobuf:"bytes,4,opt,name=UnisdkLoginJson" json:"UnisdkLoginJson,omitempty"`
	LoginSessionId  *string     `protobuf:"bytes,5,opt,name=LoginSessionId" json:"LoginSessionId,omitempty"` // 游戏服务器返回的LoginSessionId，用于断线重连
}

func (x *SdkLoginRs) Reset() {
	*x = SdkLoginRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkLoginRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkLoginRs) ProtoMessage() {}

func (x *SdkLoginRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkLoginRs.ProtoReflect.Descriptor instead.
func (*SdkLoginRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{6}
}

func (x *SdkLoginRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *SdkLoginRs) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *SdkLoginRs) GetSubCode() int32 {
	if x != nil && x.SubCode != nil {
		return *x.SubCode
	}
	return 0
}

func (x *SdkLoginRs) GetUnisdkLoginJson() string {
	if x != nil && x.UnisdkLoginJson != nil {
		return *x.UnisdkLoginJson
	}
	return ""
}

func (x *SdkLoginRs) GetLoginSessionId() string {
	if x != nil && x.LoginSessionId != nil {
		return *x.LoginSessionId
	}
	return ""
}

// 断线重连
type ReLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginSessionId *string `protobuf:"bytes,1,opt,name=LoginSessionId" json:"LoginSessionId,omitempty"` // 游戏服务器返回的LoginSessionId，用于断线重连
}

func (x *ReLogin) Reset() {
	*x = ReLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReLogin) ProtoMessage() {}

func (x *ReLogin) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReLogin.ProtoReflect.Descriptor instead.
func (*ReLogin) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{7}
}

func (x *ReLogin) GetLoginSessionId() string {
	if x != nil && x.LoginSessionId != nil {
		return *x.LoginSessionId
	}
	return ""
}

type ReLoginRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
}

func (x *ReLoginRs) Reset() {
	*x = ReLoginRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReLoginRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReLoginRs) ProtoMessage() {}

func (x *ReLoginRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReLoginRs.ProtoReflect.Descriptor instead.
func (*ReLoginRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{8}
}

func (x *ReLoginRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

type CreatePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePlayer) Reset() {
	*x = CreatePlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayer) ProtoMessage() {}

func (x *CreatePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayer.ProtoReflect.Descriptor instead.
func (*CreatePlayer) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{9}
}

type CreatePlayerRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
}

func (x *CreatePlayerRs) Reset() {
	*x = CreatePlayerRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlayerRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerRs) ProtoMessage() {}

func (x *CreatePlayerRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerRs.ProtoReflect.Descriptor instead.
func (*CreatePlayerRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePlayerRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

type SyncCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn        *int32 `protobuf:"varint,1,opt,name=Sn" json:"Sn,omitempty"` // 唯一标识，同个ID可能有多个
	Id        *int32 `protobuf:"varint,2,opt,name=Id" json:"Id,omitempty"`
	Level     *int32 `protobuf:"varint,3,opt,name=Level" json:"Level,omitempty"`
	QualityId *int32 `protobuf:"varint,4,opt,name=QualityId" json:"QualityId,omitempty"` // 提升的品质id:QualityUpCfg中的id
}

func (x *SyncCard) Reset() {
	*x = SyncCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncCard) ProtoMessage() {}

func (x *SyncCard) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncCard.ProtoReflect.Descriptor instead.
func (*SyncCard) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{11}
}

func (x *SyncCard) GetSn() int32 {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return 0
}

func (x *SyncCard) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SyncCard) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *SyncCard) GetQualityId() int32 {
	if x != nil && x.QualityId != nil {
		return *x.QualityId
	}
	return 0
}

type TeamHero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroSn    *int32 `protobuf:"varint,1,opt,name=HeroSn" json:"HeroSn,omitempty"`
	SoliderSn *int32 `protobuf:"varint,2,opt,name=SoliderSn" json:"SoliderSn,omitempty"`
}

func (x *TeamHero) Reset() {
	*x = TeamHero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamHero) ProtoMessage() {}

func (x *TeamHero) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamHero.ProtoReflect.Descriptor instead.
func (*TeamHero) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{12}
}

func (x *TeamHero) GetHeroSn() int32 {
	if x != nil && x.HeroSn != nil {
		return *x.HeroSn
	}
	return 0
}

func (x *TeamHero) GetSoliderSn() int32 {
	if x != nil && x.SoliderSn != nil {
		return *x.SoliderSn
	}
	return 0
}

type SyncTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn    *int32      `protobuf:"varint,1,opt,name=Sn" json:"Sn,omitempty"`
	Heros []*TeamHero `protobuf:"bytes,2,rep,name=Heros" json:"Heros,omitempty"`
}

func (x *SyncTeam) Reset() {
	*x = SyncTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTeam) ProtoMessage() {}

func (x *SyncTeam) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTeam.ProtoReflect.Descriptor instead.
func (*SyncTeam) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{13}
}

func (x *SyncTeam) GetSn() int32 {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return 0
}

func (x *SyncTeam) GetHeros() []*TeamHero {
	if x != nil {
		return x.Heros
	}
	return nil
}

type StageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageId *int32 `protobuf:"varint,1,opt,name=StageId" json:"StageId,omitempty"` // 己完成的关卡
	StarNum *int32 `protobuf:"varint,2,opt,name=StarNum" json:"StarNum,omitempty"` // 星星数量
}

func (x *StageItem) Reset() {
	*x = StageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageItem) ProtoMessage() {}

func (x *StageItem) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageItem.ProtoReflect.Descriptor instead.
func (*StageItem) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{14}
}

func (x *StageItem) GetStageId() int32 {
	if x != nil && x.StageId != nil {
		return *x.StageId
	}
	return 0
}

func (x *StageItem) GetStarNum() int32 {
	if x != nil && x.StarNum != nil {
		return *x.StarNum
	}
	return 0
}

type StageReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`               // 领取的id
	Status    *int32 `protobuf:"varint,2,opt,name=Status" json:"Status,omitempty"`       // 领取状态
	ChapterId *int32 `protobuf:"varint,3,opt,name=ChapterId" json:"ChapterId,omitempty"` // 章节id
}

func (x *StageReward) Reset() {
	*x = StageReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageReward) ProtoMessage() {}

func (x *StageReward) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageReward.ProtoReflect.Descriptor instead.
func (*StageReward) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{15}
}

func (x *StageReward) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *StageReward) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *StageReward) GetChapterId() int32 {
	if x != nil && x.ChapterId != nil {
		return *x.ChapterId
	}
	return 0
}

type SyncStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageItems   []*StageItem   `protobuf:"bytes,1,rep,name=StageItems" json:"StageItems,omitempty"`     // 己完成的关卡
	StageRewards []*StageReward `protobuf:"bytes,2,rep,name=StageRewards" json:"StageRewards,omitempty"` // 已领取的宝箱
}

func (x *SyncStage) Reset() {
	*x = SyncStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStage) ProtoMessage() {}

func (x *SyncStage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStage.ProtoReflect.Descriptor instead.
func (*SyncStage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{16}
}

func (x *SyncStage) GetStageItems() []*StageItem {
	if x != nil {
		return x.StageItems
	}
	return nil
}

func (x *SyncStage) GetStageRewards() []*StageReward {
	if x != nil {
		return x.StageRewards
	}
	return nil
}

type SyncShip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxHp *int32 `protobuf:"varint,1,opt,name=MaxHp" json:"MaxHp,omitempty"`
}

func (x *SyncShip) Reset() {
	*x = SyncShip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncShip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncShip) ProtoMessage() {}

func (x *SyncShip) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncShip.ProtoReflect.Descriptor instead.
func (*SyncShip) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{17}
}

func (x *SyncShip) GetMaxHp() int32 {
	if x != nil && x.MaxHp != nil {
		return *x.MaxHp
	}
	return 0
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`                 // 道具ID
	Cnt        *int32 `protobuf:"varint,2,opt,name=Cnt" json:"Cnt,omitempty"`               // 道具数量
	UpdateTime *int32 `protobuf:"varint,3,opt,name=UpdateTime" json:"UpdateTime,omitempty"` // 最近更新时间
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{18}
}

func (x *Item) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Item) GetCnt() int32 {
	if x != nil && x.Cnt != nil {
		return *x.Cnt
	}
	return 0
}

func (x *Item) GetUpdateTime() int32 {
	if x != nil && x.UpdateTime != nil {
		return *x.UpdateTime
	}
	return 0
}

// 每日任务数据
type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`               // 任务ID
	Status    *int32 `protobuf:"varint,2,opt,name=Status" json:"Status,omitempty"`       // 任务状态(0：进行中，1：已完成，2：已领取奖励)
	Countdown *int32 `protobuf:"varint,3,opt,name=Countdown" json:"Countdown,omitempty"` // 倒计时（秒）
	Finished  *int32 `protobuf:"varint,4,opt,name=Finished" json:"Finished,omitempty"`   // 已完成的步骤
	Needed    *int32 `protobuf:"varint,5,opt,name=Needed" json:"Needed,omitempty"`       // 需要完成的步骤
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{19}
}

func (x *Task) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Task) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Task) GetCountdown() int32 {
	if x != nil && x.Countdown != nil {
		return *x.Countdown
	}
	return 0
}

func (x *Task) GetFinished() int32 {
	if x != nil && x.Finished != nil {
		return *x.Finished
	}
	return 0
}

func (x *Task) GetNeeded() int32 {
	if x != nil && x.Needed != nil {
		return *x.Needed
	}
	return 0
}

type SyncPlayerBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lv          *int32  `protobuf:"varint,1,opt,name=Lv" json:"Lv,omitempty"`                   // 玩家等级
	Exp         *int32  `protobuf:"varint,2,opt,name=Exp" json:"Exp,omitempty"`                 // 经验
	Gold        *int32  `protobuf:"varint,3,opt,name=Gold" json:"Gold,omitempty"`               // 金币
	Honor       *int32  `protobuf:"varint,4,opt,name=Honor" json:"Honor,omitempty"`             // 荣耀
	Achievement *int32  `protobuf:"varint,5,opt,name=Achievement" json:"Achievement,omitempty"` // 成就
	Diamond     *int32  `protobuf:"varint,6,opt,name=Diamond" json:"Diamond,omitempty"`         // 晶币（钻石）
	Name        *string `protobuf:"bytes,7,opt,name=Name" json:"Name,omitempty"`                // 玩家名字
	Icon        *int32  `protobuf:"varint,8,opt,name=Icon" json:"Icon,omitempty"`               // 玩家头像
}

func (x *SyncPlayerBase) Reset() {
	*x = SyncPlayerBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPlayerBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPlayerBase) ProtoMessage() {}

func (x *SyncPlayerBase) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPlayerBase.ProtoReflect.Descriptor instead.
func (*SyncPlayerBase) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{20}
}

func (x *SyncPlayerBase) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *SyncPlayerBase) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *SyncPlayerBase) GetGold() int32 {
	if x != nil && x.Gold != nil {
		return *x.Gold
	}
	return 0
}

func (x *SyncPlayerBase) GetHonor() int32 {
	if x != nil && x.Honor != nil {
		return *x.Honor
	}
	return 0
}

func (x *SyncPlayerBase) GetAchievement() int32 {
	if x != nil && x.Achievement != nil {
		return *x.Achievement
	}
	return 0
}

func (x *SyncPlayerBase) GetDiamond() int32 {
	if x != nil && x.Diamond != nil {
		return *x.Diamond
	}
	return 0
}

func (x *SyncPlayerBase) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SyncPlayerBase) GetIcon() int32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

type SyncPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSn    *int32          `protobuf:"varint,1,opt,name=PlayerSn" json:"PlayerSn,omitempty"`
	Cards       []*SyncCard     `protobuf:"bytes,2,rep,name=Cards" json:"Cards,omitempty"`
	Teams       []*SyncTeam     `protobuf:"bytes,3,rep,name=Teams" json:"Teams,omitempty"`
	Stage       *SyncStage      `protobuf:"bytes,4,opt,name=Stage" json:"Stage,omitempty"`
	Ship        *SyncShip       `protobuf:"bytes,5,opt,name=Ship" json:"Ship,omitempty"` // 基地数据
	Base        *SyncPlayerBase `protobuf:"bytes,6,opt,name=Base" json:"Base,omitempty"`
	Items       []*Item         `protobuf:"bytes,7,rep,name=Items" json:"Items,omitempty"`             // 道具
	Tasks       []*Task         `protobuf:"bytes,8,rep,name=Tasks" json:"Tasks,omitempty"`             // 每日任务
	CrystalList []*CrystalInfo  `protobuf:"bytes,9,rep,name=CrystalList" json:"CrystalList,omitempty"` // 装备列表
	// 客户端使用
	Version *int32 `protobuf:"varint,100,opt,name=Version" json:"Version,omitempty"`
}

func (x *SyncPlayer) Reset() {
	*x = SyncPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPlayer) ProtoMessage() {}

func (x *SyncPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPlayer.ProtoReflect.Descriptor instead.
func (*SyncPlayer) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{21}
}

func (x *SyncPlayer) GetPlayerSn() int32 {
	if x != nil && x.PlayerSn != nil {
		return *x.PlayerSn
	}
	return 0
}

func (x *SyncPlayer) GetCards() []*SyncCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *SyncPlayer) GetTeams() []*SyncTeam {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *SyncPlayer) GetStage() *SyncStage {
	if x != nil {
		return x.Stage
	}
	return nil
}

func (x *SyncPlayer) GetShip() *SyncShip {
	if x != nil {
		return x.Ship
	}
	return nil
}

func (x *SyncPlayer) GetBase() *SyncPlayerBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SyncPlayer) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SyncPlayer) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *SyncPlayer) GetCrystalList() []*CrystalInfo {
	if x != nil {
		return x.CrystalList
	}
	return nil
}

func (x *SyncPlayer) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type UpdateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *SyncPlayerBase `protobuf:"bytes,1,opt,name=Base" json:"Base,omitempty"`
	Items       []*Item         `protobuf:"bytes,2,rep,name=Items" json:"Items,omitempty"`             // 道具
	CrystalList []*CrystalInfo  `protobuf:"bytes,3,rep,name=CrystalList" json:"CrystalList,omitempty"` // 装备列表
}

func (x *UpdateInfo) Reset() {
	*x = UpdateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfo) ProtoMessage() {}

func (x *UpdateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfo.ProtoReflect.Descriptor instead.
func (*UpdateInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateInfo) GetBase() *SyncPlayerBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *UpdateInfo) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UpdateInfo) GetCrystalList() []*CrystalInfo {
	if x != nil {
		return x.CrystalList
	}
	return nil
}

type EnterStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageId *int32 `protobuf:"varint,1,opt,name=StageId" json:"StageId,omitempty"`
	TeamSn  *int32 `protobuf:"varint,2,opt,name=TeamSn" json:"TeamSn,omitempty"`
}

func (x *EnterStage) Reset() {
	*x = EnterStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterStage) ProtoMessage() {}

func (x *EnterStage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterStage.ProtoReflect.Descriptor instead.
func (*EnterStage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{23}
}

func (x *EnterStage) GetStageId() int32 {
	if x != nil && x.StageId != nil {
		return *x.StageId
	}
	return 0
}

func (x *EnterStage) GetTeamSn() int32 {
	if x != nil && x.TeamSn != nil {
		return *x.TeamSn
	}
	return 0
}

type EnterStageRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	StageId    *int32      `protobuf:"varint,2,opt,name=StageId" json:"StageId,omitempty"`
	TeamSn     *int32      `protobuf:"varint,3,opt,name=TeamSn" json:"TeamSn,omitempty"`
}

func (x *EnterStageRs) Reset() {
	*x = EnterStageRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterStageRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterStageRs) ProtoMessage() {}

func (x *EnterStageRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterStageRs.ProtoReflect.Descriptor instead.
func (*EnterStageRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{24}
}

func (x *EnterStageRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *EnterStageRs) GetStageId() int32 {
	if x != nil && x.StageId != nil {
		return *x.StageId
	}
	return 0
}

func (x *EnterStageRs) GetTeamSn() int32 {
	if x != nil && x.TeamSn != nil {
		return *x.TeamSn
	}
	return 0
}

type OverStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StageId *int32 `protobuf:"varint,1,opt,name=StageId" json:"StageId,omitempty"`
	IsWin   *bool  `protobuf:"varint,2,opt,name=IsWin" json:"IsWin,omitempty"`
	StarNum *int32 `protobuf:"varint,3,opt,name=StarNum" json:"StarNum,omitempty"`
	Param   *int32 `protobuf:"varint,4,opt,name=Param" json:"Param,omitempty"`
	KillNum *int32 `protobuf:"varint,5,opt,name=KillNum" json:"KillNum,omitempty"`
}

func (x *OverStage) Reset() {
	*x = OverStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverStage) ProtoMessage() {}

func (x *OverStage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverStage.ProtoReflect.Descriptor instead.
func (*OverStage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{25}
}

func (x *OverStage) GetStageId() int32 {
	if x != nil && x.StageId != nil {
		return *x.StageId
	}
	return 0
}

func (x *OverStage) GetIsWin() bool {
	if x != nil && x.IsWin != nil {
		return *x.IsWin
	}
	return false
}

func (x *OverStage) GetStarNum() int32 {
	if x != nil && x.StarNum != nil {
		return *x.StarNum
	}
	return 0
}

func (x *OverStage) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

func (x *OverStage) GetKillNum() int32 {
	if x != nil && x.KillNum != nil {
		return *x.KillNum
	}
	return 0
}

type OverStageRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode  *ReturnCode    `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	StageId     *int32         `protobuf:"varint,2,opt,name=StageId" json:"StageId,omitempty"`
	IsWin       *bool          `protobuf:"varint,3,opt,name=IsWin" json:"IsWin,omitempty"`
	Param       *int32         `protobuf:"varint,4,opt,name=Param" json:"Param,omitempty"`
	LvOld       *int32         `protobuf:"varint,5,opt,name=LvOld" json:"LvOld,omitempty"` // 旧等级
	ExpOld      *int32         `protobuf:"varint,6,opt,name=ExpOld" json:"ExpOld,omitempty"`
	ExpAdd      *int32         `protobuf:"varint,7,opt,name=ExpAdd" json:"ExpAdd,omitempty"`            // 经验
	Gold        *int32         `protobuf:"varint,8,opt,name=Gold" json:"Gold,omitempty"`                // 奖励金币
	Honor       *int32         `protobuf:"varint,9,opt,name=Honor" json:"Honor,omitempty"`              // 奖励荣耀
	Achievement *int32         `protobuf:"varint,10,opt,name=Achievement" json:"Achievement,omitempty"` // 奖励成就
	Diamond     *int32         `protobuf:"varint,11,opt,name=Diamond" json:"Diamond,omitempty"`         // 奖励钻石
	Items       []*Item        `protobuf:"bytes,12,rep,name=Items" json:"Items,omitempty"`              // 奖励道具
	CrystalList []*CrystalInfo `protobuf:"bytes,13,rep,name=CrystalList" json:"CrystalList,omitempty"`  // 奖励装备
}

func (x *OverStageRs) Reset() {
	*x = OverStageRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverStageRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverStageRs) ProtoMessage() {}

func (x *OverStageRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverStageRs.ProtoReflect.Descriptor instead.
func (*OverStageRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{26}
}

func (x *OverStageRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *OverStageRs) GetStageId() int32 {
	if x != nil && x.StageId != nil {
		return *x.StageId
	}
	return 0
}

func (x *OverStageRs) GetIsWin() bool {
	if x != nil && x.IsWin != nil {
		return *x.IsWin
	}
	return false
}

func (x *OverStageRs) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

func (x *OverStageRs) GetLvOld() int32 {
	if x != nil && x.LvOld != nil {
		return *x.LvOld
	}
	return 0
}

func (x *OverStageRs) GetExpOld() int32 {
	if x != nil && x.ExpOld != nil {
		return *x.ExpOld
	}
	return 0
}

func (x *OverStageRs) GetExpAdd() int32 {
	if x != nil && x.ExpAdd != nil {
		return *x.ExpAdd
	}
	return 0
}

func (x *OverStageRs) GetGold() int32 {
	if x != nil && x.Gold != nil {
		return *x.Gold
	}
	return 0
}

func (x *OverStageRs) GetHonor() int32 {
	if x != nil && x.Honor != nil {
		return *x.Honor
	}
	return 0
}

func (x *OverStageRs) GetAchievement() int32 {
	if x != nil && x.Achievement != nil {
		return *x.Achievement
	}
	return 0
}

func (x *OverStageRs) GetDiamond() int32 {
	if x != nil && x.Diamond != nil {
		return *x.Diamond
	}
	return 0
}

func (x *OverStageRs) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OverStageRs) GetCrystalList() []*CrystalInfo {
	if x != nil {
		return x.CrystalList
	}
	return nil
}

// 领取关卡宝箱
type GetRewardStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	ChapterId *int32 `protobuf:"varint,2,opt,name=ChapterId" json:"ChapterId,omitempty"`
}

func (x *GetRewardStage) Reset() {
	*x = GetRewardStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardStage) ProtoMessage() {}

func (x *GetRewardStage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardStage.ProtoReflect.Descriptor instead.
func (*GetRewardStage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{27}
}

func (x *GetRewardStage) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GetRewardStage) GetChapterId() int32 {
	if x != nil && x.ChapterId != nil {
		return *x.ChapterId
	}
	return 0
}

// 领取关卡宝箱
type GetRewardStageRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Id         *int32      `protobuf:"varint,2,opt,name=Id" json:"Id,omitempty"`
	ChapterId  *int32      `protobuf:"varint,3,opt,name=ChapterId" json:"ChapterId,omitempty"`
	Status     *int32      `protobuf:"varint,4,opt,name=Status" json:"Status,omitempty"`
}

func (x *GetRewardStageRs) Reset() {
	*x = GetRewardStageRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRewardStageRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRewardStageRs) ProtoMessage() {}

func (x *GetRewardStageRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRewardStageRs.ProtoReflect.Descriptor instead.
func (*GetRewardStageRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{28}
}

func (x *GetRewardStageRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *GetRewardStageRs) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *GetRewardStageRs) GetChapterId() int32 {
	if x != nil && x.ChapterId != nil {
		return *x.ChapterId
	}
	return 0
}

func (x *GetRewardStageRs) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type ChangeTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team *SyncTeam `protobuf:"bytes,1,opt,name=Team" json:"Team,omitempty"`
}

func (x *ChangeTeam) Reset() {
	*x = ChangeTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTeam) ProtoMessage() {}

func (x *ChangeTeam) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTeam.ProtoReflect.Descriptor instead.
func (*ChangeTeam) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{29}
}

func (x *ChangeTeam) GetTeam() *SyncTeam {
	if x != nil {
		return x.Team
	}
	return nil
}

type ChangeTeamRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Team       *SyncTeam   `protobuf:"bytes,2,opt,name=Team" json:"Team,omitempty"`
}

func (x *ChangeTeamRs) Reset() {
	*x = ChangeTeamRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTeamRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTeamRs) ProtoMessage() {}

func (x *ChangeTeamRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTeamRs.ProtoReflect.Descriptor instead.
func (*ChangeTeamRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{30}
}

func (x *ChangeTeamRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *ChangeTeamRs) GetTeam() *SyncTeam {
	if x != nil {
		return x.Team
	}
	return nil
}

// 品质提升
type HeroQualityUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroSn *int32 `protobuf:"varint,1,opt,name=HeroSn" json:"HeroSn,omitempty"`
}

func (x *HeroQualityUp) Reset() {
	*x = HeroQualityUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroQualityUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroQualityUp) ProtoMessage() {}

func (x *HeroQualityUp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroQualityUp.ProtoReflect.Descriptor instead.
func (*HeroQualityUp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{31}
}

func (x *HeroQualityUp) GetHeroSn() int32 {
	if x != nil && x.HeroSn != nil {
		return *x.HeroSn
	}
	return 0
}

// 品质提升
type HeroQualityUpRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	HeroSn     *int32      `protobuf:"varint,2,opt,name=HeroSn" json:"HeroSn,omitempty"`       // 卡牌的sn
	QualityId  *int32      `protobuf:"varint,3,opt,name=QualityId" json:"QualityId,omitempty"` // 提升的品质id:QualityUpCfg中的id
}

func (x *HeroQualityUpRs) Reset() {
	*x = HeroQualityUpRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroQualityUpRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroQualityUpRs) ProtoMessage() {}

func (x *HeroQualityUpRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroQualityUpRs.ProtoReflect.Descriptor instead.
func (*HeroQualityUpRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{32}
}

func (x *HeroQualityUpRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *HeroQualityUpRs) GetHeroSn() int32 {
	if x != nil && x.HeroSn != nil {
		return *x.HeroSn
	}
	return 0
}

func (x *HeroQualityUpRs) GetQualityId() int32 {
	if x != nil && x.QualityId != nil {
		return *x.QualityId
	}
	return 0
}

// 解锁军团或建筑
type UnlockUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId *int32 `protobuf:"varint,1,opt,name=CardId" json:"CardId,omitempty"`
}

func (x *UnlockUnit) Reset() {
	*x = UnlockUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockUnit) ProtoMessage() {}

func (x *UnlockUnit) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockUnit.ProtoReflect.Descriptor instead.
func (*UnlockUnit) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{33}
}

func (x *UnlockUnit) GetCardId() int32 {
	if x != nil && x.CardId != nil {
		return *x.CardId
	}
	return 0
}

type UnlockUnitRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Card       *SyncCard   `protobuf:"bytes,2,opt,name=Card" json:"Card,omitempty"`
}

func (x *UnlockUnitRs) Reset() {
	*x = UnlockUnitRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockUnitRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockUnitRs) ProtoMessage() {}

func (x *UnlockUnitRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockUnitRs.ProtoReflect.Descriptor instead.
func (*UnlockUnitRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{34}
}

func (x *UnlockUnitRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *UnlockUnitRs) GetCard() *SyncCard {
	if x != nil {
		return x.Card
	}
	return nil
}

// 升级军团或建筑
type UpgradeUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardSn *int32 `protobuf:"varint,1,opt,name=CardSn" json:"CardSn,omitempty"`
}

func (x *UpgradeUnit) Reset() {
	*x = UpgradeUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeUnit) ProtoMessage() {}

func (x *UpgradeUnit) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeUnit.ProtoReflect.Descriptor instead.
func (*UpgradeUnit) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{35}
}

func (x *UpgradeUnit) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

type UpgradeUnitRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	CardSn     *int32      `protobuf:"varint,2,opt,name=CardSn" json:"CardSn,omitempty"`       // 卡牌的sn
	QualityId  *int32      `protobuf:"varint,3,opt,name=QualityId" json:"QualityId,omitempty"` // 提升的品质id:QualityUpCfg中的id
}

func (x *UpgradeUnitRs) Reset() {
	*x = UpgradeUnitRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeUnitRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeUnitRs) ProtoMessage() {}

func (x *UpgradeUnitRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeUnitRs.ProtoReflect.Descriptor instead.
func (*UpgradeUnitRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{36}
}

func (x *UpgradeUnitRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *UpgradeUnitRs) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *UpgradeUnitRs) GetQualityId() int32 {
	if x != nil && x.QualityId != nil {
		return *x.QualityId
	}
	return 0
}

// 每日任务
type TaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAll *bool   `protobuf:"varint,1,opt,name=IsAll" json:"IsAll,omitempty"` // 是否全部任务
	Tasks []*Task `protobuf:"bytes,2,rep,name=Tasks" json:"Tasks,omitempty"`  // 任务列表
}

func (x *TaskInfo) Reset() {
	*x = TaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInfo) ProtoMessage() {}

func (x *TaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInfo.ProtoReflect.Descriptor instead.
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{37}
}

func (x *TaskInfo) GetIsAll() bool {
	if x != nil && x.IsAll != nil {
		return *x.IsAll
	}
	return false
}

func (x *TaskInfo) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// 已完成的主线任务
type CompletedMainlineTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`                       // 任务ID
	CompletedTime *int32 `protobuf:"varint,2,opt,name=CompletedTime" json:"CompletedTime,omitempty"` // Unix时间戳
}

func (x *CompletedMainlineTask) Reset() {
	*x = CompletedMainlineTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletedMainlineTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedMainlineTask) ProtoMessage() {}

func (x *CompletedMainlineTask) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedMainlineTask.ProtoReflect.Descriptor instead.
func (*CompletedMainlineTask) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{38}
}

func (x *CompletedMainlineTask) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CompletedMainlineTask) GetCompletedTime() int32 {
	if x != nil && x.CompletedTime != nil {
		return *x.CompletedTime
	}
	return 0
}

// 主线任务
type MainlineTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`                       // 任务ID
	Status        *int32 `protobuf:"varint,2,opt,name=Status" json:"Status,omitempty"`               // 任务状态(0：进行中，1：已完成，2：已领取奖励，3：未解锁)
	CompletedTime *int32 `protobuf:"varint,3,opt,name=CompletedTime" json:"CompletedTime,omitempty"` // Unix时间戳
	Finished      *int32 `protobuf:"varint,4,opt,name=Finished" json:"Finished,omitempty"`           // 已完成的步骤
	Needed        *int32 `protobuf:"varint,5,opt,name=Needed" json:"Needed,omitempty"`               // 需要完成的步骤
}

func (x *MainlineTask) Reset() {
	*x = MainlineTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainlineTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainlineTask) ProtoMessage() {}

func (x *MainlineTask) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainlineTask.ProtoReflect.Descriptor instead.
func (*MainlineTask) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{39}
}

func (x *MainlineTask) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *MainlineTask) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *MainlineTask) GetCompletedTime() int32 {
	if x != nil && x.CompletedTime != nil {
		return *x.CompletedTime
	}
	return 0
}

func (x *MainlineTask) GetFinished() int32 {
	if x != nil && x.Finished != nil {
		return *x.Finished
	}
	return 0
}

func (x *MainlineTask) GetNeeded() int32 {
	if x != nil && x.Needed != nil {
		return *x.Needed
	}
	return 0
}

// 同步主线任务（登录时发）
type SyncMainTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompletedTasks []*CompletedMainlineTask `protobuf:"bytes,1,rep,name=CompletedTasks" json:"CompletedTasks,omitempty"` //已完成的任务
	CurrTask       *MainlineTask            `protobuf:"bytes,2,opt,name=CurrTask" json:"CurrTask,omitempty"`             //当前任务
}

func (x *SyncMainTask) Reset() {
	*x = SyncMainTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMainTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMainTask) ProtoMessage() {}

func (x *SyncMainTask) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMainTask.ProtoReflect.Descriptor instead.
func (*SyncMainTask) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{40}
}

func (x *SyncMainTask) GetCompletedTasks() []*CompletedMainlineTask {
	if x != nil {
		return x.CompletedTasks
	}
	return nil
}

func (x *SyncMainTask) GetCurrTask() *MainlineTask {
	if x != nil {
		return x.CurrTask
	}
	return nil
}

// 更新主线任务
type MainlineTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *MainlineTask `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
}

func (x *MainlineTaskInfo) Reset() {
	*x = MainlineTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainlineTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainlineTaskInfo) ProtoMessage() {}

func (x *MainlineTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainlineTaskInfo.ProtoReflect.Descriptor instead.
func (*MainlineTaskInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{41}
}

func (x *MainlineTaskInfo) GetTask() *MainlineTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetTaskReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []int32 `protobuf:"varint,1,rep,name=Id" json:"Id,omitempty"` // 任务ID
}

func (x *GetTaskReward) Reset() {
	*x = GetTaskReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskReward) ProtoMessage() {}

func (x *GetTaskReward) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskReward.ProtoReflect.Descriptor instead.
func (*GetTaskReward) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{42}
}

func (x *GetTaskReward) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetTaskRewardRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode  *ReturnCode    `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Id          []int32        `protobuf:"varint,2,rep,name=Id" json:"Id,omitempty"`                   // 任务ID
	ExpAdd      *int32         `protobuf:"varint,3,opt,name=ExpAdd" json:"ExpAdd,omitempty"`           // 奖励经验
	Gold        *int32         `protobuf:"varint,4,opt,name=Gold" json:"Gold,omitempty"`               // 奖励金币
	Honor       *int32         `protobuf:"varint,5,opt,name=Honor" json:"Honor,omitempty"`             // 奖励荣耀
	Achievement *int32         `protobuf:"varint,6,opt,name=Achievement" json:"Achievement,omitempty"` // 奖励成就
	Diamond     *int32         `protobuf:"varint,7,opt,name=Diamond" json:"Diamond,omitempty"`         // 奖励钻石
	Items       []*Item        `protobuf:"bytes,8,rep,name=Items" json:"Items,omitempty"`              // 奖励道具
	CrystalList []*CrystalInfo `protobuf:"bytes,9,rep,name=CrystalList" json:"CrystalList,omitempty"`  // 奖励装备
}

func (x *GetTaskRewardRs) Reset() {
	*x = GetTaskRewardRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskRewardRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskRewardRs) ProtoMessage() {}

func (x *GetTaskRewardRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskRewardRs.ProtoReflect.Descriptor instead.
func (*GetTaskRewardRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{43}
}

func (x *GetTaskRewardRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *GetTaskRewardRs) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GetTaskRewardRs) GetExpAdd() int32 {
	if x != nil && x.ExpAdd != nil {
		return *x.ExpAdd
	}
	return 0
}

func (x *GetTaskRewardRs) GetGold() int32 {
	if x != nil && x.Gold != nil {
		return *x.Gold
	}
	return 0
}

func (x *GetTaskRewardRs) GetHonor() int32 {
	if x != nil && x.Honor != nil {
		return *x.Honor
	}
	return 0
}

func (x *GetTaskRewardRs) GetAchievement() int32 {
	if x != nil && x.Achievement != nil {
		return *x.Achievement
	}
	return 0
}

func (x *GetTaskRewardRs) GetDiamond() int32 {
	if x != nil && x.Diamond != nil {
		return *x.Diamond
	}
	return 0
}

func (x *GetTaskRewardRs) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetTaskRewardRs) GetCrystalList() []*CrystalInfo {
	if x != nil {
		return x.CrystalList
	}
	return nil
}

// 使用道具
type UseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`   // 道具ID
	Cnt *int32 `protobuf:"varint,2,opt,name=Cnt" json:"Cnt,omitempty"` // 道具数量
}

func (x *UseItem) Reset() {
	*x = UseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseItem) ProtoMessage() {}

func (x *UseItem) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseItem.ProtoReflect.Descriptor instead.
func (*UseItem) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{44}
}

func (x *UseItem) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UseItem) GetCnt() int32 {
	if x != nil && x.Cnt != nil {
		return *x.Cnt
	}
	return 0
}

type UseItemRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode  *ReturnCode    `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Gold        *int32         `protobuf:"varint,2,opt,name=Gold" json:"Gold,omitempty"`               // 奖励金币
	Honor       *int32         `protobuf:"varint,3,opt,name=Honor" json:"Honor,omitempty"`             // 奖励荣耀
	Achievement *int32         `protobuf:"varint,4,opt,name=Achievement" json:"Achievement,omitempty"` // 奖励成就
	Diamond     *int32         `protobuf:"varint,5,opt,name=Diamond" json:"Diamond,omitempty"`         // 奖励钻石
	Items       []*Item        `protobuf:"bytes,6,rep,name=Items" json:"Items,omitempty"`              // 奖励道具
	CrystalList []*CrystalInfo `protobuf:"bytes,7,rep,name=CrystalList" json:"CrystalList,omitempty"`  // 奖励装备
}

func (x *UseItemRs) Reset() {
	*x = UseItemRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseItemRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseItemRs) ProtoMessage() {}

func (x *UseItemRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseItemRs.ProtoReflect.Descriptor instead.
func (*UseItemRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{45}
}

func (x *UseItemRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *UseItemRs) GetGold() int32 {
	if x != nil && x.Gold != nil {
		return *x.Gold
	}
	return 0
}

func (x *UseItemRs) GetHonor() int32 {
	if x != nil && x.Honor != nil {
		return *x.Honor
	}
	return 0
}

func (x *UseItemRs) GetAchievement() int32 {
	if x != nil && x.Achievement != nil {
		return *x.Achievement
	}
	return 0
}

func (x *UseItemRs) GetDiamond() int32 {
	if x != nil && x.Diamond != nil {
		return *x.Diamond
	}
	return 0
}

func (x *UseItemRs) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UseItemRs) GetCrystalList() []*CrystalInfo {
	if x != nil {
		return x.CrystalList
	}
	return nil
}

type HeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartBeat) Reset() {
	*x = HeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat) ProtoMessage() {}

func (x *HeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat.ProtoReflect.Descriptor instead.
func (*HeartBeat) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{46}
}

type HeartBeatRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	ServerTime *int32      `protobuf:"varint,2,opt,name=ServerTime" json:"ServerTime,omitempty"` // 服务器时间
}

func (x *HeartBeatRs) Reset() {
	*x = HeartBeatRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatRs) ProtoMessage() {}

func (x *HeartBeatRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatRs.ProtoReflect.Descriptor instead.
func (*HeartBeatRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{47}
}

func (x *HeartBeatRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *HeartBeatRs) GetServerTime() int32 {
	if x != nil && x.ServerTime != nil {
		return *x.ServerTime
	}
	return 0
}

type Explore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area  *int32        `protobuf:"varint,1,opt,name=Area" json:"Area,omitempty"`                             // 地区
	Times *ExploreTimes `protobuf:"varint,2,req,name=Times,enum=GameMsg.ExploreTimes" json:"Times,omitempty"` // 探索10次
}

func (x *Explore) Reset() {
	*x = Explore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Explore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Explore) ProtoMessage() {}

func (x *Explore) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Explore.ProtoReflect.Descriptor instead.
func (*Explore) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{48}
}

func (x *Explore) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *Explore) GetTimes() ExploreTimes {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return ExploreTimes_Single
}

type ExploreRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode  *ReturnCode    `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Items       []*Item        `protobuf:"bytes,2,rep,name=Items" json:"Items,omitempty"`             // 奖励道具
	CrystalList []*CrystalInfo `protobuf:"bytes,3,rep,name=CrystalList" json:"CrystalList,omitempty"` // 道具-水晶
}

func (x *ExploreRs) Reset() {
	*x = ExploreRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExploreRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExploreRs) ProtoMessage() {}

func (x *ExploreRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExploreRs.ProtoReflect.Descriptor instead.
func (*ExploreRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{49}
}

func (x *ExploreRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *ExploreRs) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ExploreRs) GetCrystalList() []*CrystalInfo {
	if x != nil {
		return x.CrystalList
	}
	return nil
}

// 酒馆-卡牌解锁
type CardUnLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId *int32 `protobuf:"varint,1,opt,name=CardId" json:"CardId,omitempty"` // 卡牌id
}

func (x *CardUnLock) Reset() {
	*x = CardUnLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardUnLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardUnLock) ProtoMessage() {}

func (x *CardUnLock) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardUnLock.ProtoReflect.Descriptor instead.
func (*CardUnLock) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{50}
}

func (x *CardUnLock) GetCardId() int32 {
	if x != nil && x.CardId != nil {
		return *x.CardId
	}
	return 0
}

// 酒馆-卡牌解锁
type CardUnLockRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Card       *SyncCard   `protobuf:"bytes,2,opt,name=Card" json:"Card,omitempty"`
}

func (x *CardUnLockRs) Reset() {
	*x = CardUnLockRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardUnLockRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardUnLockRs) ProtoMessage() {}

func (x *CardUnLockRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardUnLockRs.ProtoReflect.Descriptor instead.
func (*CardUnLockRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{51}
}

func (x *CardUnLockRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *CardUnLockRs) GetCard() *SyncCard {
	if x != nil {
		return x.Card
	}
	return nil
}

// 水晶背包
type CrystalBackPack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CrystalBackPack) Reset() {
	*x = CrystalBackPack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalBackPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalBackPack) ProtoMessage() {}

func (x *CrystalBackPack) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalBackPack.ProtoReflect.Descriptor instead.
func (*CrystalBackPack) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{52}
}

type CrystalBackPackRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrystalList []*CrystalInfo `protobuf:"bytes,1,rep,name=CrystalList" json:"CrystalList,omitempty"`
}

func (x *CrystalBackPackRs) Reset() {
	*x = CrystalBackPackRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrystalBackPackRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrystalBackPackRs) ProtoMessage() {}

func (x *CrystalBackPackRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrystalBackPackRs.ProtoReflect.Descriptor instead.
func (*CrystalBackPackRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{53}
}

func (x *CrystalBackPackRs) GetCrystalList() []*CrystalInfo {
	if x != nil {
		return x.CrystalList
	}
	return nil
}

// 装备水晶
type EquipCrystal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn     *int32 `protobuf:"varint,1,opt,name=Sn" json:"Sn,omitempty"`
	HeroSn *int32 `protobuf:"varint,2,opt,name=HeroSn" json:"HeroSn,omitempty"`
	Slot   *int32 `protobuf:"varint,3,opt,name=Slot" json:"Slot,omitempty"`
}

func (x *EquipCrystal) Reset() {
	*x = EquipCrystal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipCrystal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipCrystal) ProtoMessage() {}

func (x *EquipCrystal) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipCrystal.ProtoReflect.Descriptor instead.
func (*EquipCrystal) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{54}
}

func (x *EquipCrystal) GetSn() int32 {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return 0
}

func (x *EquipCrystal) GetHeroSn() int32 {
	if x != nil && x.HeroSn != nil {
		return *x.HeroSn
	}
	return 0
}

func (x *EquipCrystal) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

type EquipCrystalRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Sn         *int32      `protobuf:"varint,2,opt,name=Sn" json:"Sn,omitempty"`
	HeroSn     *int32      `protobuf:"varint,3,opt,name=HeroSn" json:"HeroSn,omitempty"`
	Slot       *int32      `protobuf:"varint,4,opt,name=Slot" json:"Slot,omitempty"`
}

func (x *EquipCrystalRs) Reset() {
	*x = EquipCrystalRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipCrystalRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipCrystalRs) ProtoMessage() {}

func (x *EquipCrystalRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipCrystalRs.ProtoReflect.Descriptor instead.
func (*EquipCrystalRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{55}
}

func (x *EquipCrystalRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *EquipCrystalRs) GetSn() int32 {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return 0
}

func (x *EquipCrystalRs) GetHeroSn() int32 {
	if x != nil && x.HeroSn != nil {
		return *x.HeroSn
	}
	return 0
}

func (x *EquipCrystalRs) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

// 玩家天赋
type PlayerTalent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Lv *int32 `protobuf:"varint,2,opt,name=Lv" json:"Lv,omitempty"`
}

func (x *PlayerTalent) Reset() {
	*x = PlayerTalent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerTalent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerTalent) ProtoMessage() {}

func (x *PlayerTalent) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerTalent.ProtoReflect.Descriptor instead.
func (*PlayerTalent) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{56}
}

func (x *PlayerTalent) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PlayerTalent) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

type SyncPlayerTalentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*PlayerTalent `protobuf:"bytes,1,rep,name=List" json:"List,omitempty"`
}

func (x *SyncPlayerTalentList) Reset() {
	*x = SyncPlayerTalentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPlayerTalentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPlayerTalentList) ProtoMessage() {}

func (x *SyncPlayerTalentList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPlayerTalentList.ProtoReflect.Descriptor instead.
func (*SyncPlayerTalentList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{57}
}

func (x *SyncPlayerTalentList) GetList() []*PlayerTalent {
	if x != nil {
		return x.List
	}
	return nil
}

// 升级玩家天赋
type UpgradePlayerTalent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
}

func (x *UpgradePlayerTalent) Reset() {
	*x = UpgradePlayerTalent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradePlayerTalent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradePlayerTalent) ProtoMessage() {}

func (x *UpgradePlayerTalent) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradePlayerTalent.ProtoReflect.Descriptor instead.
func (*UpgradePlayerTalent) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{58}
}

func (x *UpgradePlayerTalent) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type UpgradePlayerTalentRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Id         *int32      `protobuf:"varint,2,opt,name=Id" json:"Id,omitempty"`
	Lv         *int32      `protobuf:"varint,3,opt,name=Lv" json:"Lv,omitempty"` // 升级后天赋等级
}

func (x *UpgradePlayerTalentRs) Reset() {
	*x = UpgradePlayerTalentRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradePlayerTalentRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradePlayerTalentRs) ProtoMessage() {}

func (x *UpgradePlayerTalentRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradePlayerTalentRs.ProtoReflect.Descriptor instead.
func (*UpgradePlayerTalentRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{59}
}

func (x *UpgradePlayerTalentRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *UpgradePlayerTalentRs) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UpgradePlayerTalentRs) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

// 英雄天赋
type HeroTalent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Lv *int32 `protobuf:"varint,2,opt,name=Lv" json:"Lv,omitempty"`
}

func (x *HeroTalent) Reset() {
	*x = HeroTalent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroTalent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroTalent) ProtoMessage() {}

func (x *HeroTalent) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroTalent.ProtoReflect.Descriptor instead.
func (*HeroTalent) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{60}
}

func (x *HeroTalent) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *HeroTalent) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

type HeroTalentPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       *int32        `protobuf:"varint,1,opt,name=Page" json:"Page,omitempty"`
	HonorUsed  *int32        `protobuf:"varint,2,opt,name=HonorUsed" json:"HonorUsed,omitempty"` // 已消耗的荣耀
	Name       *string       `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`            // 天赋页名称
	TalentList []*HeroTalent `protobuf:"bytes,4,rep,name=TalentList" json:"TalentList,omitempty"`
	CardSn     *int32        `protobuf:"varint,5,opt,name=CardSn" json:"CardSn,omitempty"`
}

func (x *HeroTalentPage) Reset() {
	*x = HeroTalentPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroTalentPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroTalentPage) ProtoMessage() {}

func (x *HeroTalentPage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroTalentPage.ProtoReflect.Descriptor instead.
func (*HeroTalentPage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{61}
}

func (x *HeroTalentPage) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *HeroTalentPage) GetHonorUsed() int32 {
	if x != nil && x.HonorUsed != nil {
		return *x.HonorUsed
	}
	return 0
}

func (x *HeroTalentPage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *HeroTalentPage) GetTalentList() []*HeroTalent {
	if x != nil {
		return x.TalentList
	}
	return nil
}

func (x *HeroTalentPage) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

type HeroTalentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardSn *int32 `protobuf:"varint,1,opt,name=CardSn" json:"CardSn,omitempty"`
}

func (x *HeroTalentInfo) Reset() {
	*x = HeroTalentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroTalentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroTalentInfo) ProtoMessage() {}

func (x *HeroTalentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroTalentInfo.ProtoReflect.Descriptor instead.
func (*HeroTalentInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{62}
}

func (x *HeroTalentInfo) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

type HeroTalentInfoRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode       `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	CardSn     *int32            `protobuf:"varint,2,opt,name=CardSn" json:"CardSn,omitempty"`
	CurPage    *int32            `protobuf:"varint,3,opt,name=CurPage" json:"CurPage,omitempty"`
	Pages      []*HeroTalentPage `protobuf:"bytes,4,rep,name=Pages" json:"Pages,omitempty"`
	Honor      *int32            `protobuf:"varint,5,opt,name=Honor" json:"Honor,omitempty"`
}

func (x *HeroTalentInfoRs) Reset() {
	*x = HeroTalentInfoRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroTalentInfoRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroTalentInfoRs) ProtoMessage() {}

func (x *HeroTalentInfoRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroTalentInfoRs.ProtoReflect.Descriptor instead.
func (*HeroTalentInfoRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{63}
}

func (x *HeroTalentInfoRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *HeroTalentInfoRs) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *HeroTalentInfoRs) GetCurPage() int32 {
	if x != nil && x.CurPage != nil {
		return *x.CurPage
	}
	return 0
}

func (x *HeroTalentInfoRs) GetPages() []*HeroTalentPage {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *HeroTalentInfoRs) GetHonor() int32 {
	if x != nil && x.Honor != nil {
		return *x.Honor
	}
	return 0
}

// 解锁英雄天赋页
type UnlockHeroTalentPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardSn *int32 `protobuf:"varint,1,opt,name=CardSn" json:"CardSn,omitempty"`
	Page   *int32 `protobuf:"varint,2,opt,name=Page" json:"Page,omitempty"`
}

func (x *UnlockHeroTalentPage) Reset() {
	*x = UnlockHeroTalentPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockHeroTalentPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockHeroTalentPage) ProtoMessage() {}

func (x *UnlockHeroTalentPage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockHeroTalentPage.ProtoReflect.Descriptor instead.
func (*UnlockHeroTalentPage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{64}
}

func (x *UnlockHeroTalentPage) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *UnlockHeroTalentPage) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

type UnlockHeroTalentPageRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	CardSn     *int32      `protobuf:"varint,2,opt,name=CardSn" json:"CardSn,omitempty"`
	Page       *int32      `protobuf:"varint,3,opt,name=Page" json:"Page,omitempty"`
}

func (x *UnlockHeroTalentPageRs) Reset() {
	*x = UnlockHeroTalentPageRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockHeroTalentPageRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockHeroTalentPageRs) ProtoMessage() {}

func (x *UnlockHeroTalentPageRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockHeroTalentPageRs.ProtoReflect.Descriptor instead.
func (*UnlockHeroTalentPageRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{65}
}

func (x *UnlockHeroTalentPageRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *UnlockHeroTalentPageRs) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *UnlockHeroTalentPageRs) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

// 重置英雄天赋页
type ResetHeroTalentPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardSn *int32 `protobuf:"varint,1,opt,name=CardSn" json:"CardSn,omitempty"`
	Page   *int32 `protobuf:"varint,2,opt,name=Page" json:"Page,omitempty"`
}

func (x *ResetHeroTalentPage) Reset() {
	*x = ResetHeroTalentPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetHeroTalentPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetHeroTalentPage) ProtoMessage() {}

func (x *ResetHeroTalentPage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetHeroTalentPage.ProtoReflect.Descriptor instead.
func (*ResetHeroTalentPage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{66}
}

func (x *ResetHeroTalentPage) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *ResetHeroTalentPage) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

type ResetHeroTalentPageRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
}

func (x *ResetHeroTalentPageRs) Reset() {
	*x = ResetHeroTalentPageRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetHeroTalentPageRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetHeroTalentPageRs) ProtoMessage() {}

func (x *ResetHeroTalentPageRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetHeroTalentPageRs.ProtoReflect.Descriptor instead.
func (*ResetHeroTalentPageRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{67}
}

func (x *ResetHeroTalentPageRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

// 切换英雄天赋页
type SwitchHeroTalentPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardSn *int32 `protobuf:"varint,1,opt,name=CardSn" json:"CardSn,omitempty"`
	Page   *int32 `protobuf:"varint,2,opt,name=Page" json:"Page,omitempty"`
}

func (x *SwitchHeroTalentPage) Reset() {
	*x = SwitchHeroTalentPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchHeroTalentPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchHeroTalentPage) ProtoMessage() {}

func (x *SwitchHeroTalentPage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchHeroTalentPage.ProtoReflect.Descriptor instead.
func (*SwitchHeroTalentPage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{68}
}

func (x *SwitchHeroTalentPage) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *SwitchHeroTalentPage) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

type SwitchHeroTalentPageRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
}

func (x *SwitchHeroTalentPageRs) Reset() {
	*x = SwitchHeroTalentPageRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchHeroTalentPageRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchHeroTalentPageRs) ProtoMessage() {}

func (x *SwitchHeroTalentPageRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchHeroTalentPageRs.ProtoReflect.Descriptor instead.
func (*SwitchHeroTalentPageRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{69}
}

func (x *SwitchHeroTalentPageRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

// 升级英雄天赋
type UpgradeHeroTalent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardSn   *int32 `protobuf:"varint,1,opt,name=CardSn" json:"CardSn,omitempty"`
	Page     *int32 `protobuf:"varint,2,opt,name=Page" json:"Page,omitempty"`
	TalentId *int32 `protobuf:"varint,3,opt,name=TalentId" json:"TalentId,omitempty"`
}

func (x *UpgradeHeroTalent) Reset() {
	*x = UpgradeHeroTalent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeHeroTalent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeHeroTalent) ProtoMessage() {}

func (x *UpgradeHeroTalent) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeHeroTalent.ProtoReflect.Descriptor instead.
func (*UpgradeHeroTalent) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{70}
}

func (x *UpgradeHeroTalent) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *UpgradeHeroTalent) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *UpgradeHeroTalent) GetTalentId() int32 {
	if x != nil && x.TalentId != nil {
		return *x.TalentId
	}
	return 0
}

type UpgradeHeroTalentRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode    *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	CardSn        *int32      `protobuf:"varint,2,opt,name=CardSn" json:"CardSn,omitempty"`
	Page          *int32      `protobuf:"varint,3,opt,name=Page" json:"Page,omitempty"`
	TalentId      *int32      `protobuf:"varint,4,opt,name=TalentId" json:"TalentId,omitempty"`
	Lv            *int32      `protobuf:"varint,5,opt,name=Lv" json:"Lv,omitempty"`
	PageHonorUsed *int32      `protobuf:"varint,6,opt,name=PageHonorUsed" json:"PageHonorUsed,omitempty"` // 天赋页已使用天赋点数
}

func (x *UpgradeHeroTalentRs) Reset() {
	*x = UpgradeHeroTalentRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeHeroTalentRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeHeroTalentRs) ProtoMessage() {}

func (x *UpgradeHeroTalentRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeHeroTalentRs.ProtoReflect.Descriptor instead.
func (*UpgradeHeroTalentRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{71}
}

func (x *UpgradeHeroTalentRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *UpgradeHeroTalentRs) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *UpgradeHeroTalentRs) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *UpgradeHeroTalentRs) GetTalentId() int32 {
	if x != nil && x.TalentId != nil {
		return *x.TalentId
	}
	return 0
}

func (x *UpgradeHeroTalentRs) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *UpgradeHeroTalentRs) GetPageHonorUsed() int32 {
	if x != nil && x.PageHonorUsed != nil {
		return *x.PageHonorUsed
	}
	return 0
}

// 重命名天赋页
type ModifyHeroTalentPageName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardSn *int32  `protobuf:"varint,1,opt,name=CardSn" json:"CardSn,omitempty"`
	Page   *int32  `protobuf:"varint,2,opt,name=Page" json:"Page,omitempty"`
	Name   *string `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
}

func (x *ModifyHeroTalentPageName) Reset() {
	*x = ModifyHeroTalentPageName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyHeroTalentPageName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyHeroTalentPageName) ProtoMessage() {}

func (x *ModifyHeroTalentPageName) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyHeroTalentPageName.ProtoReflect.Descriptor instead.
func (*ModifyHeroTalentPageName) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{72}
}

func (x *ModifyHeroTalentPageName) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *ModifyHeroTalentPageName) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ModifyHeroTalentPageName) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ModifyHeroTalentPageNameRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	CardSn     *int32      `protobuf:"varint,2,opt,name=CardSn" json:"CardSn,omitempty"`
	Page       *int32      `protobuf:"varint,3,opt,name=Page" json:"Page,omitempty"`
	Name       *string     `protobuf:"bytes,4,opt,name=Name" json:"Name,omitempty"`
}

func (x *ModifyHeroTalentPageNameRs) Reset() {
	*x = ModifyHeroTalentPageNameRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyHeroTalentPageNameRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyHeroTalentPageNameRs) ProtoMessage() {}

func (x *ModifyHeroTalentPageNameRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyHeroTalentPageNameRs.ProtoReflect.Descriptor instead.
func (*ModifyHeroTalentPageNameRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{73}
}

func (x *ModifyHeroTalentPageNameRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *ModifyHeroTalentPageNameRs) GetCardSn() int32 {
	if x != nil && x.CardSn != nil {
		return *x.CardSn
	}
	return 0
}

func (x *ModifyHeroTalentPageNameRs) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ModifyHeroTalentPageNameRs) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// 同步英雄当前使用的天赋页
type SyncHeroValidTalentPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HerosTalentPage []*HeroTalentPage `protobuf:"bytes,1,rep,name=HerosTalentPage" json:"HerosTalentPage,omitempty"`
}

func (x *SyncHeroValidTalentPage) Reset() {
	*x = SyncHeroValidTalentPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncHeroValidTalentPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncHeroValidTalentPage) ProtoMessage() {}

func (x *SyncHeroValidTalentPage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncHeroValidTalentPage.ProtoReflect.Descriptor instead.
func (*SyncHeroValidTalentPage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{74}
}

func (x *SyncHeroValidTalentPage) GetHerosTalentPage() []*HeroTalentPage {
	if x != nil {
		return x.HerosTalentPage
	}
	return nil
}

// 在线的玩家信息
type OnlinePlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSn   *int32  `protobuf:"varint,1,opt,name=PlayerSn" json:"PlayerSn,omitempty"`
	NickName   *string `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`      // 昵称
	HeadImage  *int32  `protobuf:"varint,3,opt,name=HeadImage" json:"HeadImage,omitempty"`   // 头像
	Lv         *int32  `protobuf:"varint,4,opt,name=Lv" json:"Lv,omitempty"`                 // 等级
	Collection []int32 `protobuf:"varint,5,rep,name=Collection" json:"Collection,omitempty"` // 藏品
}

func (x *OnlinePlayerInfo) Reset() {
	*x = OnlinePlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlinePlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePlayerInfo) ProtoMessage() {}

func (x *OnlinePlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePlayerInfo.ProtoReflect.Descriptor instead.
func (*OnlinePlayerInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{75}
}

func (x *OnlinePlayerInfo) GetPlayerSn() int32 {
	if x != nil && x.PlayerSn != nil {
		return *x.PlayerSn
	}
	return 0
}

func (x *OnlinePlayerInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *OnlinePlayerInfo) GetHeadImage() int32 {
	if x != nil && x.HeadImage != nil {
		return *x.HeadImage
	}
	return 0
}

func (x *OnlinePlayerInfo) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *OnlinePlayerInfo) GetCollection() []int32 {
	if x != nil {
		return x.Collection
	}
	return nil
}

// 玩家下线
type PlayerOffline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSn *int32 `protobuf:"varint,1,opt,name=PlayerSn" json:"PlayerSn,omitempty"`
}

func (x *PlayerOffline) Reset() {
	*x = PlayerOffline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerOffline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerOffline) ProtoMessage() {}

func (x *PlayerOffline) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerOffline.ProtoReflect.Descriptor instead.
func (*PlayerOffline) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{76}
}

func (x *PlayerOffline) GetPlayerSn() int32 {
	if x != nil && x.PlayerSn != nil {
		return *x.PlayerSn
	}
	return 0
}

// 聊天C2S
type SendChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver *int32  `protobuf:"varint,1,opt,name=Receiver" json:"Receiver,omitempty"` // 私聊对象PlayerSn（0：世界频道）
	Content  *string `protobuf:"bytes,2,opt,name=Content" json:"Content,omitempty"`    // 聊天内容
}

func (x *SendChat) Reset() {
	*x = SendChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChat) ProtoMessage() {}

func (x *SendChat) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChat.ProtoReflect.Descriptor instead.
func (*SendChat) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{77}
}

func (x *SendChat) GetReceiver() int32 {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return 0
}

func (x *SendChat) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

// 聊天S2C
type ChatRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
}

func (x *ChatRs) Reset() {
	*x = ChatRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRs) ProtoMessage() {}

func (x *ChatRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRs.ProtoReflect.Descriptor instead.
func (*ChatRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{78}
}

func (x *ChatRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

// 聊天S2C
type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   *int32  `protobuf:"varint,1,opt,name=Sender" json:"Sender,omitempty"`     // 发送方（0：系统）
	Receiver *int32  `protobuf:"varint,2,opt,name=Receiver" json:"Receiver,omitempty"` // 接受方（0：世界频道）
	SendTime *int32  `protobuf:"varint,3,opt,name=SendTime" json:"SendTime,omitempty"` // 发送时间（Unix时间戳）
	Content  *string `protobuf:"bytes,4,opt,name=Content" json:"Content,omitempty"`    // 聊天内容
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{79}
}

func (x *ChatMessage) GetSender() int32 {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return 0
}

func (x *ChatMessage) GetReceiver() int32 {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return 0
}

func (x *ChatMessage) GetSendTime() int32 {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return 0
}

func (x *ChatMessage) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

// 屏蔽聊天玩家
type ChatBlacklist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSn *int32 `protobuf:"varint,1,opt,name=PlayerSn" json:"PlayerSn,omitempty"`
}

func (x *ChatBlacklist) Reset() {
	*x = ChatBlacklist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatBlacklist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatBlacklist) ProtoMessage() {}

func (x *ChatBlacklist) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatBlacklist.ProtoReflect.Descriptor instead.
func (*ChatBlacklist) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{80}
}

func (x *ChatBlacklist) GetPlayerSn() int32 {
	if x != nil && x.PlayerSn != nil {
		return *x.PlayerSn
	}
	return 0
}

// 取消屏蔽聊天玩家
type CancelChatBlacklist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSn *int32 `protobuf:"varint,1,opt,name=PlayerSn" json:"PlayerSn,omitempty"`
}

func (x *CancelChatBlacklist) Reset() {
	*x = CancelChatBlacklist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelChatBlacklist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelChatBlacklist) ProtoMessage() {}

func (x *CancelChatBlacklist) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelChatBlacklist.ProtoReflect.Descriptor instead.
func (*CancelChatBlacklist) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{81}
}

func (x *CancelChatBlacklist) GetPlayerSn() int32 {
	if x != nil && x.PlayerSn != nil {
		return *x.PlayerSn
	}
	return 0
}

// 屏蔽聊天玩家列表
type ChatBlacklistRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	PlayerList []int32     `protobuf:"varint,2,rep,name=PlayerList" json:"PlayerList,omitempty"`
}

func (x *ChatBlacklistRs) Reset() {
	*x = ChatBlacklistRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatBlacklistRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatBlacklistRs) ProtoMessage() {}

func (x *ChatBlacklistRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatBlacklistRs.ProtoReflect.Descriptor instead.
func (*ChatBlacklistRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{82}
}

func (x *ChatBlacklistRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *ChatBlacklistRs) GetPlayerList() []int32 {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

// 获取私聊对象在线状态
type ChatPrivateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerList []int32 `protobuf:"varint,1,rep,name=PlayerList" json:"PlayerList,omitempty"`
}

func (x *ChatPrivateList) Reset() {
	*x = ChatPrivateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatPrivateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatPrivateList) ProtoMessage() {}

func (x *ChatPrivateList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatPrivateList.ProtoReflect.Descriptor instead.
func (*ChatPrivateList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{83}
}

func (x *ChatPrivateList) GetPlayerList() []int32 {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

type ChatPlayerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSn *int32 `protobuf:"varint,1,opt,name=PlayerSn" json:"PlayerSn,omitempty"`
	Online   *int32 `protobuf:"varint,2,opt,name=Online" json:"Online,omitempty"` // 0:不在线，1：在线
}

func (x *ChatPlayerState) Reset() {
	*x = ChatPlayerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatPlayerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatPlayerState) ProtoMessage() {}

func (x *ChatPlayerState) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatPlayerState.ProtoReflect.Descriptor instead.
func (*ChatPlayerState) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{84}
}

func (x *ChatPlayerState) GetPlayerSn() int32 {
	if x != nil && x.PlayerSn != nil {
		return *x.PlayerSn
	}
	return 0
}

func (x *ChatPlayerState) GetOnline() int32 {
	if x != nil && x.Online != nil {
		return *x.Online
	}
	return 0
}

type ChatPrivateListRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerList []*ChatPlayerState `protobuf:"bytes,1,rep,name=PlayerList" json:"PlayerList,omitempty"`
}

func (x *ChatPrivateListRs) Reset() {
	*x = ChatPrivateListRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatPrivateListRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatPrivateListRs) ProtoMessage() {}

func (x *ChatPrivateListRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatPrivateListRs.ProtoReflect.Descriptor instead.
func (*ChatPrivateListRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{85}
}

func (x *ChatPrivateListRs) GetPlayerList() []*ChatPlayerState {
	if x != nil {
		return x.PlayerList
	}
	return nil
}

// 用户安装客户端
type LogInstallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstallTime *int64  `protobuf:"varint,1,opt,name=InstallTime" json:"InstallTime,omitempty"`
	Ip          *string `protobuf:"bytes,2,opt,name=Ip" json:"Ip,omitempty"`
	DeviceModel *string `protobuf:"bytes,3,opt,name=DeviceModel" json:"DeviceModel,omitempty"`
	OsName      *string `protobuf:"bytes,4,opt,name=OsName" json:"OsName,omitempty"`
	OsVer       *string `protobuf:"bytes,5,opt,name=OsVer" json:"OsVer,omitempty"`
	MacAddr     *string `protobuf:"bytes,6,opt,name=MacAddr" json:"MacAddr,omitempty"`
	Udid        *string `protobuf:"bytes,7,opt,name=Udid" json:"Udid,omitempty"`
	AppChannel  *string `protobuf:"bytes,8,opt,name=AppChannel" json:"AppChannel,omitempty"`
	AppVer      *string `protobuf:"bytes,9,opt,name=AppVer" json:"AppVer,omitempty"`
}

func (x *LogInstallReq) Reset() {
	*x = LogInstallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInstallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInstallReq) ProtoMessage() {}

func (x *LogInstallReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInstallReq.ProtoReflect.Descriptor instead.
func (*LogInstallReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{86}
}

func (x *LogInstallReq) GetInstallTime() int64 {
	if x != nil && x.InstallTime != nil {
		return *x.InstallTime
	}
	return 0
}

func (x *LogInstallReq) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *LogInstallReq) GetDeviceModel() string {
	if x != nil && x.DeviceModel != nil {
		return *x.DeviceModel
	}
	return ""
}

func (x *LogInstallReq) GetOsName() string {
	if x != nil && x.OsName != nil {
		return *x.OsName
	}
	return ""
}

func (x *LogInstallReq) GetOsVer() string {
	if x != nil && x.OsVer != nil {
		return *x.OsVer
	}
	return ""
}

func (x *LogInstallReq) GetMacAddr() string {
	if x != nil && x.MacAddr != nil {
		return *x.MacAddr
	}
	return ""
}

func (x *LogInstallReq) GetUdid() string {
	if x != nil && x.Udid != nil {
		return *x.Udid
	}
	return ""
}

func (x *LogInstallReq) GetAppChannel() string {
	if x != nil && x.AppChannel != nil {
		return *x.AppChannel
	}
	return ""
}

func (x *LogInstallReq) GetAppVer() string {
	if x != nil && x.AppVer != nil {
		return *x.AppVer
	}
	return ""
}

type LogInstallRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
}

func (x *LogInstallRsp) Reset() {
	*x = LogInstallRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInstallRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInstallRsp) ProtoMessage() {}

func (x *LogInstallRsp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInstallRsp.ProtoReflect.Descriptor instead.
func (*LogInstallRsp) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{87}
}

func (x *LogInstallRsp) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

type GetOtherPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSn *int32 `protobuf:"varint,1,opt,name=PlayerSn" json:"PlayerSn,omitempty"`
}

func (x *GetOtherPlayerInfo) Reset() {
	*x = GetOtherPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOtherPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherPlayerInfo) ProtoMessage() {}

func (x *GetOtherPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherPlayerInfo.ProtoReflect.Descriptor instead.
func (*GetOtherPlayerInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{88}
}

func (x *GetOtherPlayerInfo) GetPlayerSn() int32 {
	if x != nil && x.PlayerSn != nil {
		return *x.PlayerSn
	}
	return 0
}

type GetOtherPlayerInfoRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerSn   *int32  `protobuf:"varint,1,opt,name=PlayerSn" json:"PlayerSn,omitempty"`
	NickName   *string `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`      // 昵称
	HeadImage  *int32  `protobuf:"varint,3,opt,name=HeadImage" json:"HeadImage,omitempty"`   // 头像
	Lv         *int32  `protobuf:"varint,4,opt,name=Lv" json:"Lv,omitempty"`                 // 等级
	Online     *int32  `protobuf:"varint,5,opt,name=Online" json:"Online,omitempty"`         // 0:不在线，1：在线
	Collection []int32 `protobuf:"varint,6,rep,name=Collection" json:"Collection,omitempty"` // 藏品
}

func (x *GetOtherPlayerInfoRs) Reset() {
	*x = GetOtherPlayerInfoRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOtherPlayerInfoRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherPlayerInfoRs) ProtoMessage() {}

func (x *GetOtherPlayerInfoRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherPlayerInfoRs.ProtoReflect.Descriptor instead.
func (*GetOtherPlayerInfoRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{89}
}

func (x *GetOtherPlayerInfoRs) GetPlayerSn() int32 {
	if x != nil && x.PlayerSn != nil {
		return *x.PlayerSn
	}
	return 0
}

func (x *GetOtherPlayerInfoRs) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *GetOtherPlayerInfoRs) GetHeadImage() int32 {
	if x != nil && x.HeadImage != nil {
		return *x.HeadImage
	}
	return 0
}

func (x *GetOtherPlayerInfoRs) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *GetOtherPlayerInfoRs) GetOnline() int32 {
	if x != nil && x.Online != nil {
		return *x.Online
	}
	return 0
}

func (x *GetOtherPlayerInfoRs) GetCollection() []int32 {
	if x != nil {
		return x.Collection
	}
	return nil
}

type MailInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MailInfoReq) Reset() {
	*x = MailInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailInfoReq) ProtoMessage() {}

func (x *MailInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailInfoReq.ProtoReflect.Descriptor instead.
func (*MailInfoReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{90}
}

// 邮件详情
type MailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId   *int32  `protobuf:"varint,1,opt,name=MailId" json:"MailId,omitempty"`
	State    *int32  `protobuf:"varint,2,opt,name=State" json:"State,omitempty"` //邮件状态 0：已领取 1：未领取
	Title    *string `protobuf:"bytes,3,opt,name=Title" json:"Title,omitempty"`
	Name     *string `protobuf:"bytes,4,opt,name=Name" json:"Name,omitempty"`
	Time     *int64  `protobuf:"varint,5,opt,name=Time" json:"Time,omitempty"`
	DownTime *int32  `protobuf:"varint,6,opt,name=DownTime" json:"DownTime,omitempty"`
	Items    []*Item `protobuf:"bytes,7,rep,name=Items" json:"Items,omitempty"` // 奖励道具
}

func (x *MailInfo) Reset() {
	*x = MailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailInfo) ProtoMessage() {}

func (x *MailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailInfo.ProtoReflect.Descriptor instead.
func (*MailInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{91}
}

func (x *MailInfo) GetMailId() int32 {
	if x != nil && x.MailId != nil {
		return *x.MailId
	}
	return 0
}

func (x *MailInfo) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *MailInfo) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MailInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MailInfo) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *MailInfo) GetDownTime() int32 {
	if x != nil && x.DownTime != nil {
		return *x.DownTime
	}
	return 0
}

func (x *MailInfo) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type MailInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Infos      []*MailInfo `protobuf:"bytes,2,rep,name=Infos" json:"Infos,omitempty"` // 邮件列表
}

func (x *MailInfoRes) Reset() {
	*x = MailInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailInfoRes) ProtoMessage() {}

func (x *MailInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailInfoRes.ProtoReflect.Descriptor instead.
func (*MailInfoRes) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{92}
}

func (x *MailInfoRes) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *MailInfoRes) GetInfos() []*MailInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

// 获取邮件内容描述
type MailGetDescReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId *int32 `protobuf:"varint,1,opt,name=MailId" json:"MailId,omitempty"`
}

func (x *MailGetDescReq) Reset() {
	*x = MailGetDescReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailGetDescReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailGetDescReq) ProtoMessage() {}

func (x *MailGetDescReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailGetDescReq.ProtoReflect.Descriptor instead.
func (*MailGetDescReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{93}
}

func (x *MailGetDescReq) GetMailId() int32 {
	if x != nil && x.MailId != nil {
		return *x.MailId
	}
	return 0
}

type MailGetDescRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	MailId     *int32      `protobuf:"varint,2,opt,name=MailId" json:"MailId,omitempty"`
	Desc       *string     `protobuf:"bytes,3,opt,name=Desc" json:"Desc,omitempty"` // 内容描述
}

func (x *MailGetDescRs) Reset() {
	*x = MailGetDescRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailGetDescRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailGetDescRs) ProtoMessage() {}

func (x *MailGetDescRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailGetDescRs.ProtoReflect.Descriptor instead.
func (*MailGetDescRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{94}
}

func (x *MailGetDescRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *MailGetDescRs) GetMailId() int32 {
	if x != nil && x.MailId != nil {
		return *x.MailId
	}
	return 0
}

func (x *MailGetDescRs) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

// 删除邮件
type MailDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId *int32 `protobuf:"varint,1,opt,name=MailId" json:"MailId,omitempty"`
}

func (x *MailDeleteReq) Reset() {
	*x = MailDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailDeleteReq) ProtoMessage() {}

func (x *MailDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailDeleteReq.ProtoReflect.Descriptor instead.
func (*MailDeleteReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{95}
}

func (x *MailDeleteReq) GetMailId() int32 {
	if x != nil && x.MailId != nil {
		return *x.MailId
	}
	return 0
}

type MailDeleteRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	MailId     *int32      `protobuf:"varint,2,opt,name=MailId" json:"MailId,omitempty"`
}

func (x *MailDeleteRs) Reset() {
	*x = MailDeleteRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailDeleteRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailDeleteRs) ProtoMessage() {}

func (x *MailDeleteRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailDeleteRs.ProtoReflect.Descriptor instead.
func (*MailDeleteRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{96}
}

func (x *MailDeleteRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *MailDeleteRs) GetMailId() int32 {
	if x != nil && x.MailId != nil {
		return *x.MailId
	}
	return 0
}

// 领取邮件
type MailGetAwardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MailId *int32 `protobuf:"varint,1,opt,name=MailId" json:"MailId,omitempty"`
}

func (x *MailGetAwardReq) Reset() {
	*x = MailGetAwardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailGetAwardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailGetAwardReq) ProtoMessage() {}

func (x *MailGetAwardReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailGetAwardReq.ProtoReflect.Descriptor instead.
func (*MailGetAwardReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{97}
}

func (x *MailGetAwardReq) GetMailId() int32 {
	if x != nil && x.MailId != nil {
		return *x.MailId
	}
	return 0
}

// 领取邮件
type MailGetAwardRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	MailId     *int32      `protobuf:"varint,2,opt,name=MailId" json:"MailId,omitempty"`
}

func (x *MailGetAwardRs) Reset() {
	*x = MailGetAwardRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MailGetAwardRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailGetAwardRs) ProtoMessage() {}

func (x *MailGetAwardRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailGetAwardRs.ProtoReflect.Descriptor instead.
func (*MailGetAwardRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{98}
}

func (x *MailGetAwardRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *MailGetAwardRs) GetMailId() int32 {
	if x != nil && x.MailId != nil {
		return *x.MailId
	}
	return 0
}

type RankListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *int32 `protobuf:"varint,1,opt,name=Type" json:"Type,omitempty"` //榜单类型 0: 通关星数榜 1: 通关次数榜 2: 关卡进度榜 3: 战利品收集榜 4: 击杀积分榜
}

func (x *RankListReq) Reset() {
	*x = RankListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankListReq) ProtoMessage() {}

func (x *RankListReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankListReq.ProtoReflect.Descriptor instead.
func (*RankListReq) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{99}
}

func (x *RankListReq) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

//排行榜详情
type RankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank      *int32  `protobuf:"varint,1,opt,name=Rank" json:"Rank,omitempty"`           //名次
	PlayerSn  *int32  `protobuf:"varint,2,opt,name=PlayerSn" json:"PlayerSn,omitempty"`   //玩家Id
	HeadImage *int32  `protobuf:"varint,3,opt,name=HeadImage" json:"HeadImage,omitempty"` //玩家头像Id
	NickName  *string `protobuf:"bytes,4,opt,name=NickName" json:"NickName,omitempty"`    //昵称
	Num       *int64  `protobuf:"varint,5,opt,name=Num" json:"Num,omitempty"`             //数量
}

func (x *RankInfo) Reset() {
	*x = RankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankInfo) ProtoMessage() {}

func (x *RankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankInfo.ProtoReflect.Descriptor instead.
func (*RankInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{100}
}

func (x *RankInfo) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *RankInfo) GetPlayerSn() int32 {
	if x != nil && x.PlayerSn != nil {
		return *x.PlayerSn
	}
	return 0
}

func (x *RankInfo) GetHeadImage() int32 {
	if x != nil && x.HeadImage != nil {
		return *x.HeadImage
	}
	return 0
}

func (x *RankInfo) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *RankInfo) GetNum() int64 {
	if x != nil && x.Num != nil {
		return *x.Num
	}
	return 0
}

type RankListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Type       *int32      `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`  //榜单类型
	Infos      []*RankInfo `protobuf:"bytes,3,rep,name=Infos" json:"Infos,omitempty"` //排行List
	My         *RankInfo   `protobuf:"bytes,4,opt,name=My" json:"My,omitempty"`       //玩家自身排行数据
}

func (x *RankListRes) Reset() {
	*x = RankListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankListRes) ProtoMessage() {}

func (x *RankListRes) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankListRes.ProtoReflect.Descriptor instead.
func (*RankListRes) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{101}
}

func (x *RankListRes) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *RankListRes) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *RankListRes) GetInfos() []*RankInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *RankListRes) GetMy() *RankInfo {
	if x != nil {
		return x.My
	}
	return nil
}

// 战利品任务
type LootMission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *int32              `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	State         *LootMission_Status `protobuf:"varint,2,opt,name=State,enum=GameMsg.LootMission_Status" json:"State,omitempty"`
	Progress      *int32              `protobuf:"varint,3,opt,name=Progress" json:"Progress,omitempty"` // 当前完成数量
	CompletedTime *int32              `protobuf:"varint,4,opt,name=CompletedTime" json:"CompletedTime,omitempty"`
}

func (x *LootMission) Reset() {
	*x = LootMission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LootMission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootMission) ProtoMessage() {}

func (x *LootMission) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootMission.ProtoReflect.Descriptor instead.
func (*LootMission) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{102}
}

func (x *LootMission) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *LootMission) GetState() LootMission_Status {
	if x != nil && x.State != nil {
		return *x.State
	}
	return LootMission_Processing
}

func (x *LootMission) GetProgress() int32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *LootMission) GetCompletedTime() int32 {
	if x != nil && x.CompletedTime != nil {
		return *x.CompletedTime
	}
	return 0
}

// 获取战利品任务列表
type LootMissionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LootMissionList) Reset() {
	*x = LootMissionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LootMissionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootMissionList) ProtoMessage() {}

func (x *LootMissionList) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootMissionList.ProtoReflect.Descriptor instead.
func (*LootMissionList) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{103}
}

type LootMissionListRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode    `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	List       []*LootMission `protobuf:"bytes,2,rep,name=List" json:"List,omitempty"`
}

func (x *LootMissionListRs) Reset() {
	*x = LootMissionListRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LootMissionListRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootMissionListRs) ProtoMessage() {}

func (x *LootMissionListRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootMissionListRs.ProtoReflect.Descriptor instead.
func (*LootMissionListRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{104}
}

func (x *LootMissionListRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *LootMissionListRs) GetList() []*LootMission {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取战利品任务奖励
type RewardLootMission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
}

func (x *RewardLootMission) Reset() {
	*x = RewardLootMission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardLootMission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardLootMission) ProtoMessage() {}

func (x *RewardLootMission) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardLootMission.ProtoReflect.Descriptor instead.
func (*RewardLootMission) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{105}
}

func (x *RewardLootMission) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type RewardLootMissionRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode  *ReturnCode    `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Id          *int32         `protobuf:"varint,2,opt,name=Id" json:"Id,omitempty"`                   // 任务ID
	ExpAdd      *int32         `protobuf:"varint,3,opt,name=ExpAdd" json:"ExpAdd,omitempty"`           // 奖励经验
	Gold        *int32         `protobuf:"varint,4,opt,name=Gold" json:"Gold,omitempty"`               // 奖励金币
	Honor       *int32         `protobuf:"varint,5,opt,name=Honor" json:"Honor,omitempty"`             // 奖励荣耀
	Achievement *int32         `protobuf:"varint,6,opt,name=Achievement" json:"Achievement,omitempty"` // 奖励成就
	Diamond     *int32         `protobuf:"varint,7,opt,name=Diamond" json:"Diamond,omitempty"`         // 奖励钻石
	Items       []*Item        `protobuf:"bytes,8,rep,name=Items" json:"Items,omitempty"`              // 奖励道具
	CrystalList []*CrystalInfo `protobuf:"bytes,9,rep,name=CrystalList" json:"CrystalList,omitempty"`  // 奖励装备
}

func (x *RewardLootMissionRs) Reset() {
	*x = RewardLootMissionRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardLootMissionRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardLootMissionRs) ProtoMessage() {}

func (x *RewardLootMissionRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardLootMissionRs.ProtoReflect.Descriptor instead.
func (*RewardLootMissionRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{106}
}

func (x *RewardLootMissionRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *RewardLootMissionRs) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RewardLootMissionRs) GetExpAdd() int32 {
	if x != nil && x.ExpAdd != nil {
		return *x.ExpAdd
	}
	return 0
}

func (x *RewardLootMissionRs) GetGold() int32 {
	if x != nil && x.Gold != nil {
		return *x.Gold
	}
	return 0
}

func (x *RewardLootMissionRs) GetHonor() int32 {
	if x != nil && x.Honor != nil {
		return *x.Honor
	}
	return 0
}

func (x *RewardLootMissionRs) GetAchievement() int32 {
	if x != nil && x.Achievement != nil {
		return *x.Achievement
	}
	return 0
}

func (x *RewardLootMissionRs) GetDiamond() int32 {
	if x != nil && x.Diamond != nil {
		return *x.Diamond
	}
	return 0
}

func (x *RewardLootMissionRs) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RewardLootMissionRs) GetCrystalList() []*CrystalInfo {
	if x != nil {
		return x.CrystalList
	}
	return nil
}

type LootItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LootMissionId *int32 `protobuf:"varint,1,opt,name=LootMissionId" json:"LootMissionId,omitempty"`
	PsX           *int32 `protobuf:"varint,2,opt,name=PsX" json:"PsX,omitempty"` // 摆放位置 x
	PsY           *int32 `protobuf:"varint,3,opt,name=PsY" json:"PsY,omitempty"` // 摆放位置 y
}

func (x *LootItem) Reset() {
	*x = LootItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LootItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootItem) ProtoMessage() {}

func (x *LootItem) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootItem.ProtoReflect.Descriptor instead.
func (*LootItem) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{107}
}

func (x *LootItem) GetLootMissionId() int32 {
	if x != nil && x.LootMissionId != nil {
		return *x.LootMissionId
	}
	return 0
}

func (x *LootItem) GetPsX() int32 {
	if x != nil && x.PsX != nil {
		return *x.PsX
	}
	return 0
}

func (x *LootItem) GetPsY() int32 {
	if x != nil && x.PsY != nil {
		return *x.PsY
	}
	return 0
}

// 获取战利品列表
type GetLootWall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLootWall) Reset() {
	*x = GetLootWall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLootWall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLootWall) ProtoMessage() {}

func (x *GetLootWall) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLootWall.ProtoReflect.Descriptor instead.
func (*GetLootWall) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{108}
}

type GetLootWallRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	List       []*LootItem `protobuf:"bytes,2,rep,name=List" json:"List,omitempty"`
}

func (x *GetLootWallRs) Reset() {
	*x = GetLootWallRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLootWallRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLootWallRs) ProtoMessage() {}

func (x *GetLootWallRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLootWallRs.ProtoReflect.Descriptor instead.
func (*GetLootWallRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{109}
}

func (x *GetLootWallRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *GetLootWallRs) GetList() []*LootItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 放置战利品
type PlaceLoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*LootItem `protobuf:"bytes,1,rep,name=List" json:"List,omitempty"`
}

func (x *PlaceLoot) Reset() {
	*x = PlaceLoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceLoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceLoot) ProtoMessage() {}

func (x *PlaceLoot) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceLoot.ProtoReflect.Descriptor instead.
func (*PlaceLoot) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{110}
}

func (x *PlaceLoot) GetList() []*LootItem {
	if x != nil {
		return x.List
	}
	return nil
}

type PlaceLootRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
}

func (x *PlaceLootRs) Reset() {
	*x = PlaceLootRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceLootRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceLootRs) ProtoMessage() {}

func (x *PlaceLootRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceLootRs.ProtoReflect.Descriptor instead.
func (*PlaceLootRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{111}
}

func (x *PlaceLootRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

// 清空战利品展示墙
type ClearLootWall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearLootWall) Reset() {
	*x = ClearLootWall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearLootWall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearLootWall) ProtoMessage() {}

func (x *ClearLootWall) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearLootWall.ProtoReflect.Descriptor instead.
func (*ClearLootWall) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{112}
}

type ClearLootWallRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
}

func (x *ClearLootWallRs) Reset() {
	*x = ClearLootWallRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearLootWallRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearLootWallRs) ProtoMessage() {}

func (x *ClearLootWallRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearLootWallRs.ProtoReflect.Descriptor instead.
func (*ClearLootWallRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{113}
}

func (x *ClearLootWallRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

// 重命名玩家名字
type ModifyPlayerName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn   *int32  `protobuf:"varint,1,opt,name=Sn" json:"Sn,omitempty"`
	Name *string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
}

func (x *ModifyPlayerName) Reset() {
	*x = ModifyPlayerName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPlayerName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPlayerName) ProtoMessage() {}

func (x *ModifyPlayerName) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPlayerName.ProtoReflect.Descriptor instead.
func (*ModifyPlayerName) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{114}
}

func (x *ModifyPlayerName) GetSn() int32 {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return 0
}

func (x *ModifyPlayerName) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ModifyPlayerNameRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Sn         *int32      `protobuf:"varint,2,opt,name=Sn" json:"Sn,omitempty"`
	Name       *string     `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
}

func (x *ModifyPlayerNameRs) Reset() {
	*x = ModifyPlayerNameRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPlayerNameRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPlayerNameRs) ProtoMessage() {}

func (x *ModifyPlayerNameRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPlayerNameRs.ProtoReflect.Descriptor instead.
func (*ModifyPlayerNameRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{115}
}

func (x *ModifyPlayerNameRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *ModifyPlayerNameRs) GetSn() int32 {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return 0
}

func (x *ModifyPlayerNameRs) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// 设置玩家头像
type ModifyPlayerIcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn   *int32 `protobuf:"varint,1,opt,name=Sn" json:"Sn,omitempty"`
	Icon *int32 `protobuf:"varint,2,opt,name=Icon" json:"Icon,omitempty"`
}

func (x *ModifyPlayerIcon) Reset() {
	*x = ModifyPlayerIcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPlayerIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPlayerIcon) ProtoMessage() {}

func (x *ModifyPlayerIcon) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPlayerIcon.ProtoReflect.Descriptor instead.
func (*ModifyPlayerIcon) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{116}
}

func (x *ModifyPlayerIcon) GetSn() int32 {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return 0
}

func (x *ModifyPlayerIcon) GetIcon() int32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

type ModifyPlayerIconRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnCode *ReturnCode `protobuf:"varint,1,opt,name=ReturnCode,enum=GameMsg.ReturnCode" json:"ReturnCode,omitempty"`
	Sn         *int32      `protobuf:"varint,2,opt,name=Sn" json:"Sn,omitempty"`
	Icon       *int32      `protobuf:"varint,3,opt,name=Icon" json:"Icon,omitempty"`
}

func (x *ModifyPlayerIconRs) Reset() {
	*x = ModifyPlayerIconRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyPlayerIconRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyPlayerIconRs) ProtoMessage() {}

func (x *ModifyPlayerIconRs) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyPlayerIconRs.ProtoReflect.Descriptor instead.
func (*ModifyPlayerIconRs) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{117}
}

func (x *ModifyPlayerIconRs) GetReturnCode() ReturnCode {
	if x != nil && x.ReturnCode != nil {
		return *x.ReturnCode
	}
	return ReturnCode_OK
}

func (x *ModifyPlayerIconRs) GetSn() int32 {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return 0
}

func (x *ModifyPlayerIconRs) GetIcon() int32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

var File_msg_proto protoreflect.FileDescriptor

var file_msg_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x22, 0x40, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4c, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x4c, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x49, 0x64, 0x78, 0x22, 0xba, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6c, 0x6f, 0x74,
	0x12, 0x27, 0x0a, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x49, 0x64, 0x22, 0xd6, 0x03, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x64, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x55, 0x64, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x64, 0x66, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x64, 0x66, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70,
	0x70, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x70,
	0x70, 0x56, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x6c, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x4f, 0x6c, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x4d, 0x45, 0x49,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x4d, 0x45, 0x49, 0x22, 0x71, 0x0a, 0x0c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22,
	0x45, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x55, 0x0a, 0x08, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x61, 0x75, 0x74, 0x68, 0x4a, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x61, 0x75, 0x74, 0x68, 0x4a, 0x73, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xc1, 0x01,
	0x0a, 0x0a, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x55, 0x6e, 0x69, 0x73, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4a, 0x73,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x55, 0x6e, 0x69, 0x73, 0x64, 0x6b,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x31, 0x0a, 0x07, 0x52, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x09, 0x52, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5e, 0x0a,
	0x08, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x40, 0x0a,
	0x08, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72,
	0x6f, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x53,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x22,
	0x43, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x53,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x27, 0x0a, 0x05, 0x48,
	0x65, 0x72, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x05, 0x48,
	0x65, 0x72, 0x6f, 0x73, 0x22, 0x3f, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x74,
	0x61, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x53, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x09, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0a, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x68, 0x69,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x48, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4d, 0x61, 0x78, 0x48, 0x70, 0x22, 0x48, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x43, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x80, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4e, 0x65,
	0x65, 0x64, 0x65, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4c, 0x76, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x4c, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x78, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x45, 0x78, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x6f, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x48, 0x6f,
	0x6e, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x94, 0x03, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x53, 0x6e, 0x12, 0x27, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x54,
	0x65, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x54,
	0x65, 0x61, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x53, 0x68, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x68, 0x69, 0x70, 0x52,
	0x04, 0x53, 0x68, 0x69, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x0b,
	0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x79, 0x73,
	0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x96,
	0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a,
	0x04, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4d, 0x73, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x36, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x43,
	0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x73,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x6e, 0x22, 0x75, 0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x6e, 0x22, 0x85,
	0x01, 0x0a, 0x09, 0x4f, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x57, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x57, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53,
	0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x4b, 0x69, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4b,
	0x69, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x22, 0x91, 0x03, 0x0a, 0x0b, 0x4f, 0x76, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x57, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x57, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x76, 0x4f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x4c, 0x76, 0x4f, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x4f, 0x6c,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x45, 0x78, 0x70, 0x4f, 0x6c, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x41, 0x64, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x45, 0x78, 0x70, 0x41, 0x64, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x48,
	0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x48, 0x6f, 0x6e, 0x6f,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x23, 0x0a,
	0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73,
	0x67, 0x2e, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43,
	0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x73, 0x12,
	0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x0a, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x25, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x22,
	0x6a, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x73, 0x12,
	0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x27, 0x0a, 0x0d, 0x48,
	0x65, 0x72, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x65, 0x72, 0x6f, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65,
	0x72, 0x6f, 0x53, 0x6e, 0x22, 0x7c, 0x0a, 0x0f, 0x48, 0x65, 0x72, 0x6f, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x55, 0x70, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x65, 0x72, 0x6f, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65,
	0x72, 0x6f, 0x53, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x22, 0x24, 0x0a, 0x0a, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x0c, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a,
	0x04, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04,
	0x43, 0x61, 0x72, 0x64, 0x22, 0x25, 0x0a, 0x0b, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x22, 0x7a, 0x0a, 0x0d, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x12, 0x23, 0x0a, 0x05, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x73, 0x67, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x4d,
	0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x90, 0x01,
	0x0a, 0x0c, 0x4d, 0x61, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x65, 0x65, 0x64,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64,
	0x22, 0x89, 0x01, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x46, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4d, 0x73, 0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x43, 0x75, 0x72,
	0x72, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x3d, 0x0a, 0x10,
	0x4d, 0x61, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x29, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x1f, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0xb1, 0x02, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x73,
	0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x41, 0x64, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x45, 0x78, 0x70, 0x41, 0x64, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x47, 0x6f, 0x6c,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x61,
	0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x69, 0x61, 0x6d,
	0x6f, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x73,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x2b, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x43, 0x6e, 0x74, 0x22, 0x83, 0x02,
	0x0a, 0x09, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x47, 0x6f, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44,
	0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x43,
	0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x79, 0x73, 0x74,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74,
	0x22, 0x62, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x73, 0x12,
	0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x41,
	0x72, 0x65, 0x61, 0x12, 0x2b, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x45, 0x78, 0x70,
	0x6c, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x22, 0x9d, 0x01, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x52, 0x73, 0x12, 0x33,
	0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x73,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x24, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x55, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x55, 0x6e,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x43,
	0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x43, 0x61,
	0x72, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x63,
	0x6b, 0x50, 0x61, 0x63, 0x6b, 0x22, 0x4b, 0x0a, 0x11, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x72,
	0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x4a, 0x0a, 0x0c, 0x45, 0x71, 0x75, 0x69, 0x70, 0x43, 0x72, 0x79, 0x73, 0x74,
	0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x53, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6c,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0x81,
	0x01, 0x0a, 0x0e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x52,
	0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x6c,
	0x6f, 0x74, 0x22, 0x2e, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x4c, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x4c, 0x76, 0x22, 0x41, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x52,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x15,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x4c, 0x76,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x4c, 0x76, 0x22, 0x2c, 0x0a, 0x0a, 0x48, 0x65,
	0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x4c, 0x76, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x4c, 0x76, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x48, 0x65, 0x72,
	0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x33, 0x0a, 0x0a, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e,
	0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x54, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x22, 0x28,
	0x0a, 0x0e, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x22, 0xbe, 0x01, 0x0a, 0x10, 0x48, 0x65, 0x72,
	0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x12, 0x33, 0x0a,
	0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x75, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x48, 0x65,
	0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x05, 0x50, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x22, 0x42, 0x0a, 0x14, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a,
	0x16, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x61,
	0x72, 0x64, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x15, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a,
	0x16, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5b, 0x0a, 0x11,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x13, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x52,
	0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x4c, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x4c, 0x76, 0x12, 0x24,
	0x0a, 0x0d, 0x50, 0x61, 0x67, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x50, 0x61, 0x67, 0x65, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x64, 0x22, 0x5a, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x48, 0x65,
	0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x91, 0x01, 0x0a, 0x1a, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x48, 0x65, 0x72, 0x6f, 0x54,
	0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x12,
	0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x65, 0x72, 0x6f,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x41, 0x0a, 0x0f, 0x48, 0x65, 0x72, 0x6f, 0x73, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x73, 0x67, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x0f, 0x48, 0x65, 0x72, 0x6f, 0x73, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x4c, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x4c, 0x76, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a,
	0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x22, 0x40, 0x0a, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x06,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x77, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x2b, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x74, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x6e, 0x22, 0x31, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x74, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x6e, 0x22, 0x66, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x0f,
	0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x45, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf7, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x64, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x55, 0x64, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x56, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x22,
	0x44, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x22, 0xb4, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x48, 0x65, 0x61,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4c, 0x76, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x4c, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0d,
	0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x22, 0xb7, 0x01,
	0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x69, 0x6c,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6b, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x28, 0x0a, 0x0e, 0x4d, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0x70,
	0x0a, 0x0d, 0x4d, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x52, 0x73, 0x12,
	0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63,
	0x22, 0x27, 0x0a, 0x0d, 0x4d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x0c, 0x4d, 0x61, 0x69,
	0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x4d, 0x61, 0x69, 0x6c, 0x47, 0x65,
	0x74, 0x41, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x69,
	0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49,
	0x64, 0x22, 0x5d, 0x0a, 0x0e, 0x4d, 0x61, 0x69, 0x6c, 0x47, 0x65, 0x74, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73,
	0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x69, 0x6c,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4d, 0x61, 0x69, 0x6c, 0x49, 0x64,
	0x22, 0x21, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x48, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0xa2, 0x01, 0x0a,
	0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0a,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52,
	0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x21,
	0x0a, 0x02, 0x4d, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x4d,
	0x79, 0x22, 0xc8, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x4d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x10, 0x02, 0x22, 0x11, 0x0a, 0x0f,
	0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x72, 0x0a, 0x11, 0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73,
	0x67, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x23, 0x0a, 0x11, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x6f,
	0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x22, 0xb5, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x73,
	0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x41, 0x64, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x45, 0x78, 0x70, 0x41, 0x64, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x47, 0x6f, 0x6c,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x68, 0x69, 0x65,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x61,
	0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x69, 0x61, 0x6d,
	0x6f, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x72, 0x79, 0x73,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x54, 0x0a, 0x08, 0x4c, 0x6f, 0x6f, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0d,
	0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x73, 0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x50, 0x73, 0x58, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x73, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x50, 0x73, 0x59, 0x22, 0x0d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6f,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x22, 0x6b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4d, 0x73, 0x67, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x32, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4c, 0x6f, 0x6f, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4c,
	0x6f, 0x6f, 0x74, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x4c, 0x6f, 0x6f, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x22, 0x46, 0x0a, 0x0f, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x4c, 0x6f, 0x6f, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x73, 0x12, 0x33,
	0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x36, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x12, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x10, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x53, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x49, 0x63,
	0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x53, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x49, 0x63, 0x6f,
	0x6e, 0x2a, 0xb5, 0x0b, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x55, 0x4e, 0x4b, 0x4f, 0x4e, 0x57, 0x4e,
	0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f,
	0x57, 0x52, 0x4f, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x10,
	0x04, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x4f, 0x4e, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x45, 0x78, 0x69, 0x74, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x52,
	0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x14, 0x12, 0x19,
	0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x10, 0x1e, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x48, 0x65,
	0x72, 0x6f, 0x10, 0x1f, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x65, 0x72,
	0x10, 0x20, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x5f, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x10, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x6e, 0x12,
	0x14, 0x0a, 0x10, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x70, 0x5f, 0x4e, 0x6f, 0x48,
	0x65, 0x72, 0x6f, 0x10, 0x78, 0x12, 0x13, 0x0a, 0x0f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x55, 0x70, 0x5f, 0x4d, 0x61, 0x78, 0x4c, 0x76, 0x10, 0x79, 0x12, 0x15, 0x0a, 0x11, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x70, 0x5f, 0x4e, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10,
	0x7a, 0x12, 0x16, 0x0a, 0x12, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x70, 0x5f, 0x4e,
	0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x7b, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x44,
	0x10, 0x7e, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x69, 0x74,
	0x41, 0x67, 0x61, 0x69, 0x6e, 0x10, 0x7f, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x55, 0x6e, 0x69, 0x74, 0x4e, 0x6f, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x80, 0x01,
	0x12, 0x1b, 0x0a, 0x16, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x4e,
	0x6f, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10, 0x82, 0x01, 0x12, 0x18, 0x0a,
	0x13, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x10, 0x83, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x4d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x10, 0x84,
	0x01, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x41, 0x72, 0x65, 0x61, 0x10, 0x8c, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x78,
	0x70, 0x6c, 0x6f, 0x72, 0x65, 0x41, 0x72, 0x65, 0x61, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x10,
	0x8d, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x61, 0x67, 0x65, 0x10, 0x8e, 0x01, 0x12, 0x18,
	0x0a, 0x13, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x49, 0x44, 0x10, 0x8f, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x10, 0x90, 0x01, 0x12, 0x18,
	0x0a, 0x13, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x6e, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x91, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x49, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x61, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x10, 0x92, 0x01,
	0x12, 0x18, 0x0a, 0x13, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73,
	0x4e, 0x6f, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0x93, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x49, 0x64, 0x10, 0x94, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x64,
	0x10, 0x95, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x4c, 0x76, 0x4d, 0x61, 0x78, 0x10, 0x96, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x10, 0x97, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x10,
	0x98, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x67, 0x65, 0x10, 0x99, 0x01, 0x12, 0x1a,
	0x0a, 0x15, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x48, 0x65, 0x72, 0x6f, 0x4c, 0x76, 0x10, 0x9a, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x48, 0x65,
	0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x10, 0x9b, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x72, 0x6f, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x10, 0x9c, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x64, 0x10, 0x9d, 0x01, 0x12, 0x1d,
	0x0a, 0x18, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x4d, 0x61, 0x78, 0x10, 0x9e, 0x01, 0x12, 0x14, 0x0a,
	0x0f, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4c, 0x76, 0x4d, 0x61, 0x78,
	0x10, 0x9f, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x64, 0x10, 0xa0, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x55, 0x73,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x49, 0x74,
	0x65, 0x6d, 0x10, 0xa1, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x55, 0x73, 0x65, 0x10, 0xa2, 0x01, 0x12, 0x16, 0x0a, 0x11,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x73, 0x67, 0x4d, 0x61,
	0x78, 0x10, 0xa5, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x64, 0x10, 0xaa, 0x01, 0x12,
	0x1a, 0x0a, 0x15, 0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x10, 0xab, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x4c,
	0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x65, 0x64, 0x10, 0xac, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x4c, 0x6f, 0x6f, 0x74, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x69, 0x6c, 0x10, 0xad, 0x01,
	0x12, 0x14, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4c, 0x6f, 0x6f, 0x74, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x10, 0xae, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x65, 0x64, 0x10, 0xaf, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x64, 0x10, 0xb0, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xb1, 0x01,
	0x12, 0x17, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xb2, 0x01, 0x2a, 0x23, 0x0a, 0x0c, 0x45, 0x78, 0x70,
	0x6c, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x65, 0x6e, 0x10, 0x02, 0x42, 0x0b,
	0x5a, 0x09, 0x2e, 0x3b, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x73, 0x67,
}

var (
	file_msg_proto_rawDescOnce sync.Once
	file_msg_proto_rawDescData = file_msg_proto_rawDesc
)

func file_msg_proto_rawDescGZIP() []byte {
	file_msg_proto_rawDescOnce.Do(func() {
		file_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_proto_rawDescData)
	})
	return file_msg_proto_rawDescData
}

var file_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 118)
var file_msg_proto_goTypes = []interface{}{
	(ReturnCode)(0),                    // 0: GameMsg.ReturnCode
	(ExploreTimes)(0),                  // 1: GameMsg.ExploreTimes
	(LootMission_Status)(0),            // 2: GameMsg.LootMission.Status
	(*AttrItem)(nil),                   // 3: GameMsg.AttrItem
	(*CrystalInfo)(nil),                // 4: GameMsg.CrystalInfo
	(*DeviceInfo)(nil),                 // 5: GameMsg.DeviceInfo
	(*AccountCheck)(nil),               // 6: GameMsg.AccountCheck
	(*AccountCheckRs)(nil),             // 7: GameMsg.AccountCheckRs
	(*SdkLogin)(nil),                   // 8: GameMsg.SdkLogin
	(*SdkLoginRs)(nil),                 // 9: GameMsg.SdkLoginRs
	(*ReLogin)(nil),                    // 10: GameMsg.ReLogin
	(*ReLoginRs)(nil),                  // 11: GameMsg.ReLoginRs
	(*CreatePlayer)(nil),               // 12: GameMsg.CreatePlayer
	(*CreatePlayerRs)(nil),             // 13: GameMsg.CreatePlayerRs
	(*SyncCard)(nil),                   // 14: GameMsg.SyncCard
	(*TeamHero)(nil),                   // 15: GameMsg.TeamHero
	(*SyncTeam)(nil),                   // 16: GameMsg.SyncTeam
	(*StageItem)(nil),                  // 17: GameMsg.StageItem
	(*StageReward)(nil),                // 18: GameMsg.StageReward
	(*SyncStage)(nil),                  // 19: GameMsg.SyncStage
	(*SyncShip)(nil),                   // 20: GameMsg.SyncShip
	(*Item)(nil),                       // 21: GameMsg.Item
	(*Task)(nil),                       // 22: GameMsg.Task
	(*SyncPlayerBase)(nil),             // 23: GameMsg.SyncPlayerBase
	(*SyncPlayer)(nil),                 // 24: GameMsg.SyncPlayer
	(*UpdateInfo)(nil),                 // 25: GameMsg.UpdateInfo
	(*EnterStage)(nil),                 // 26: GameMsg.EnterStage
	(*EnterStageRs)(nil),               // 27: GameMsg.EnterStageRs
	(*OverStage)(nil),                  // 28: GameMsg.OverStage
	(*OverStageRs)(nil),                // 29: GameMsg.OverStageRs
	(*GetRewardStage)(nil),             // 30: GameMsg.GetRewardStage
	(*GetRewardStageRs)(nil),           // 31: GameMsg.GetRewardStageRs
	(*ChangeTeam)(nil),                 // 32: GameMsg.ChangeTeam
	(*ChangeTeamRs)(nil),               // 33: GameMsg.ChangeTeamRs
	(*HeroQualityUp)(nil),              // 34: GameMsg.HeroQualityUp
	(*HeroQualityUpRs)(nil),            // 35: GameMsg.HeroQualityUpRs
	(*UnlockUnit)(nil),                 // 36: GameMsg.UnlockUnit
	(*UnlockUnitRs)(nil),               // 37: GameMsg.UnlockUnitRs
	(*UpgradeUnit)(nil),                // 38: GameMsg.UpgradeUnit
	(*UpgradeUnitRs)(nil),              // 39: GameMsg.UpgradeUnitRs
	(*TaskInfo)(nil),                   // 40: GameMsg.TaskInfo
	(*CompletedMainlineTask)(nil),      // 41: GameMsg.CompletedMainlineTask
	(*MainlineTask)(nil),               // 42: GameMsg.MainlineTask
	(*SyncMainTask)(nil),               // 43: GameMsg.SyncMainTask
	(*MainlineTaskInfo)(nil),           // 44: GameMsg.MainlineTaskInfo
	(*GetTaskReward)(nil),              // 45: GameMsg.GetTaskReward
	(*GetTaskRewardRs)(nil),            // 46: GameMsg.GetTaskRewardRs
	(*UseItem)(nil),                    // 47: GameMsg.UseItem
	(*UseItemRs)(nil),                  // 48: GameMsg.UseItemRs
	(*HeartBeat)(nil),                  // 49: GameMsg.HeartBeat
	(*HeartBeatRs)(nil),                // 50: GameMsg.HeartBeatRs
	(*Explore)(nil),                    // 51: GameMsg.Explore
	(*ExploreRs)(nil),                  // 52: GameMsg.ExploreRs
	(*CardUnLock)(nil),                 // 53: GameMsg.CardUnLock
	(*CardUnLockRs)(nil),               // 54: GameMsg.CardUnLockRs
	(*CrystalBackPack)(nil),            // 55: GameMsg.CrystalBackPack
	(*CrystalBackPackRs)(nil),          // 56: GameMsg.CrystalBackPackRs
	(*EquipCrystal)(nil),               // 57: GameMsg.EquipCrystal
	(*EquipCrystalRs)(nil),             // 58: GameMsg.EquipCrystalRs
	(*PlayerTalent)(nil),               // 59: GameMsg.PlayerTalent
	(*SyncPlayerTalentList)(nil),       // 60: GameMsg.SyncPlayerTalentList
	(*UpgradePlayerTalent)(nil),        // 61: GameMsg.UpgradePlayerTalent
	(*UpgradePlayerTalentRs)(nil),      // 62: GameMsg.UpgradePlayerTalentRs
	(*HeroTalent)(nil),                 // 63: GameMsg.HeroTalent
	(*HeroTalentPage)(nil),             // 64: GameMsg.HeroTalentPage
	(*HeroTalentInfo)(nil),             // 65: GameMsg.HeroTalentInfo
	(*HeroTalentInfoRs)(nil),           // 66: GameMsg.HeroTalentInfoRs
	(*UnlockHeroTalentPage)(nil),       // 67: GameMsg.UnlockHeroTalentPage
	(*UnlockHeroTalentPageRs)(nil),     // 68: GameMsg.UnlockHeroTalentPageRs
	(*ResetHeroTalentPage)(nil),        // 69: GameMsg.ResetHeroTalentPage
	(*ResetHeroTalentPageRs)(nil),      // 70: GameMsg.ResetHeroTalentPageRs
	(*SwitchHeroTalentPage)(nil),       // 71: GameMsg.SwitchHeroTalentPage
	(*SwitchHeroTalentPageRs)(nil),     // 72: GameMsg.SwitchHeroTalentPageRs
	(*UpgradeHeroTalent)(nil),          // 73: GameMsg.UpgradeHeroTalent
	(*UpgradeHeroTalentRs)(nil),        // 74: GameMsg.UpgradeHeroTalentRs
	(*ModifyHeroTalentPageName)(nil),   // 75: GameMsg.ModifyHeroTalentPageName
	(*ModifyHeroTalentPageNameRs)(nil), // 76: GameMsg.ModifyHeroTalentPageNameRs
	(*SyncHeroValidTalentPage)(nil),    // 77: GameMsg.SyncHeroValidTalentPage
	(*OnlinePlayerInfo)(nil),           // 78: GameMsg.OnlinePlayerInfo
	(*PlayerOffline)(nil),              // 79: GameMsg.PlayerOffline
	(*SendChat)(nil),                   // 80: GameMsg.SendChat
	(*ChatRs)(nil),                     // 81: GameMsg.ChatRs
	(*ChatMessage)(nil),                // 82: GameMsg.ChatMessage
	(*ChatBlacklist)(nil),              // 83: GameMsg.ChatBlacklist
	(*CancelChatBlacklist)(nil),        // 84: GameMsg.CancelChatBlacklist
	(*ChatBlacklistRs)(nil),            // 85: GameMsg.ChatBlacklistRs
	(*ChatPrivateList)(nil),            // 86: GameMsg.ChatPrivateList
	(*ChatPlayerState)(nil),            // 87: GameMsg.ChatPlayerState
	(*ChatPrivateListRs)(nil),          // 88: GameMsg.ChatPrivateListRs
	(*LogInstallReq)(nil),              // 89: GameMsg.LogInstallReq
	(*LogInstallRsp)(nil),              // 90: GameMsg.LogInstallRsp
	(*GetOtherPlayerInfo)(nil),         // 91: GameMsg.GetOtherPlayerInfo
	(*GetOtherPlayerInfoRs)(nil),       // 92: GameMsg.GetOtherPlayerInfoRs
	(*MailInfoReq)(nil),                // 93: GameMsg.MailInfoReq
	(*MailInfo)(nil),                   // 94: GameMsg.MailInfo
	(*MailInfoRes)(nil),                // 95: GameMsg.MailInfoRes
	(*MailGetDescReq)(nil),             // 96: GameMsg.MailGetDescReq
	(*MailGetDescRs)(nil),              // 97: GameMsg.MailGetDescRs
	(*MailDeleteReq)(nil),              // 98: GameMsg.MailDeleteReq
	(*MailDeleteRs)(nil),               // 99: GameMsg.MailDeleteRs
	(*MailGetAwardReq)(nil),            // 100: GameMsg.MailGetAwardReq
	(*MailGetAwardRs)(nil),             // 101: GameMsg.MailGetAwardRs
	(*RankListReq)(nil),                // 102: GameMsg.RankListReq
	(*RankInfo)(nil),                   // 103: GameMsg.RankInfo
	(*RankListRes)(nil),                // 104: GameMsg.RankListRes
	(*LootMission)(nil),                // 105: GameMsg.LootMission
	(*LootMissionList)(nil),            // 106: GameMsg.LootMissionList
	(*LootMissionListRs)(nil),          // 107: GameMsg.LootMissionListRs
	(*RewardLootMission)(nil),          // 108: GameMsg.RewardLootMission
	(*RewardLootMissionRs)(nil),        // 109: GameMsg.RewardLootMissionRs
	(*LootItem)(nil),                   // 110: GameMsg.LootItem
	(*GetLootWall)(nil),                // 111: GameMsg.GetLootWall
	(*GetLootWallRs)(nil),              // 112: GameMsg.GetLootWallRs
	(*PlaceLoot)(nil),                  // 113: GameMsg.PlaceLoot
	(*PlaceLootRs)(nil),                // 114: GameMsg.PlaceLootRs
	(*ClearLootWall)(nil),              // 115: GameMsg.ClearLootWall
	(*ClearLootWallRs)(nil),            // 116: GameMsg.ClearLootWallRs
	(*ModifyPlayerName)(nil),           // 117: GameMsg.ModifyPlayerName
	(*ModifyPlayerNameRs)(nil),         // 118: GameMsg.ModifyPlayerNameRs
	(*ModifyPlayerIcon)(nil),           // 119: GameMsg.ModifyPlayerIcon
	(*ModifyPlayerIconRs)(nil),         // 120: GameMsg.ModifyPlayerIconRs
}
var file_msg_proto_depIdxs = []int32{
	3,   // 0: GameMsg.CrystalInfo.Attrs:type_name -> GameMsg.AttrItem
	5,   // 1: GameMsg.AccountCheck.Device:type_name -> GameMsg.DeviceInfo
	0,   // 2: GameMsg.AccountCheckRs.ReturnCode:type_name -> GameMsg.ReturnCode
	5,   // 3: GameMsg.SdkLogin.Device:type_name -> GameMsg.DeviceInfo
	0,   // 4: GameMsg.SdkLoginRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 5: GameMsg.ReLoginRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 6: GameMsg.CreatePlayerRs.ReturnCode:type_name -> GameMsg.ReturnCode
	15,  // 7: GameMsg.SyncTeam.Heros:type_name -> GameMsg.TeamHero
	17,  // 8: GameMsg.SyncStage.StageItems:type_name -> GameMsg.StageItem
	18,  // 9: GameMsg.SyncStage.StageRewards:type_name -> GameMsg.StageReward
	14,  // 10: GameMsg.SyncPlayer.Cards:type_name -> GameMsg.SyncCard
	16,  // 11: GameMsg.SyncPlayer.Teams:type_name -> GameMsg.SyncTeam
	19,  // 12: GameMsg.SyncPlayer.Stage:type_name -> GameMsg.SyncStage
	20,  // 13: GameMsg.SyncPlayer.Ship:type_name -> GameMsg.SyncShip
	23,  // 14: GameMsg.SyncPlayer.Base:type_name -> GameMsg.SyncPlayerBase
	21,  // 15: GameMsg.SyncPlayer.Items:type_name -> GameMsg.Item
	22,  // 16: GameMsg.SyncPlayer.Tasks:type_name -> GameMsg.Task
	4,   // 17: GameMsg.SyncPlayer.CrystalList:type_name -> GameMsg.CrystalInfo
	23,  // 18: GameMsg.UpdateInfo.Base:type_name -> GameMsg.SyncPlayerBase
	21,  // 19: GameMsg.UpdateInfo.Items:type_name -> GameMsg.Item
	4,   // 20: GameMsg.UpdateInfo.CrystalList:type_name -> GameMsg.CrystalInfo
	0,   // 21: GameMsg.EnterStageRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 22: GameMsg.OverStageRs.ReturnCode:type_name -> GameMsg.ReturnCode
	21,  // 23: GameMsg.OverStageRs.Items:type_name -> GameMsg.Item
	4,   // 24: GameMsg.OverStageRs.CrystalList:type_name -> GameMsg.CrystalInfo
	0,   // 25: GameMsg.GetRewardStageRs.ReturnCode:type_name -> GameMsg.ReturnCode
	16,  // 26: GameMsg.ChangeTeam.Team:type_name -> GameMsg.SyncTeam
	0,   // 27: GameMsg.ChangeTeamRs.ReturnCode:type_name -> GameMsg.ReturnCode
	16,  // 28: GameMsg.ChangeTeamRs.Team:type_name -> GameMsg.SyncTeam
	0,   // 29: GameMsg.HeroQualityUpRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 30: GameMsg.UnlockUnitRs.ReturnCode:type_name -> GameMsg.ReturnCode
	14,  // 31: GameMsg.UnlockUnitRs.Card:type_name -> GameMsg.SyncCard
	0,   // 32: GameMsg.UpgradeUnitRs.ReturnCode:type_name -> GameMsg.ReturnCode
	22,  // 33: GameMsg.TaskInfo.Tasks:type_name -> GameMsg.Task
	41,  // 34: GameMsg.SyncMainTask.CompletedTasks:type_name -> GameMsg.CompletedMainlineTask
	42,  // 35: GameMsg.SyncMainTask.CurrTask:type_name -> GameMsg.MainlineTask
	42,  // 36: GameMsg.MainlineTaskInfo.task:type_name -> GameMsg.MainlineTask
	0,   // 37: GameMsg.GetTaskRewardRs.ReturnCode:type_name -> GameMsg.ReturnCode
	21,  // 38: GameMsg.GetTaskRewardRs.Items:type_name -> GameMsg.Item
	4,   // 39: GameMsg.GetTaskRewardRs.CrystalList:type_name -> GameMsg.CrystalInfo
	0,   // 40: GameMsg.UseItemRs.ReturnCode:type_name -> GameMsg.ReturnCode
	21,  // 41: GameMsg.UseItemRs.Items:type_name -> GameMsg.Item
	4,   // 42: GameMsg.UseItemRs.CrystalList:type_name -> GameMsg.CrystalInfo
	0,   // 43: GameMsg.HeartBeatRs.ReturnCode:type_name -> GameMsg.ReturnCode
	1,   // 44: GameMsg.Explore.Times:type_name -> GameMsg.ExploreTimes
	0,   // 45: GameMsg.ExploreRs.ReturnCode:type_name -> GameMsg.ReturnCode
	21,  // 46: GameMsg.ExploreRs.Items:type_name -> GameMsg.Item
	4,   // 47: GameMsg.ExploreRs.CrystalList:type_name -> GameMsg.CrystalInfo
	0,   // 48: GameMsg.CardUnLockRs.ReturnCode:type_name -> GameMsg.ReturnCode
	14,  // 49: GameMsg.CardUnLockRs.Card:type_name -> GameMsg.SyncCard
	4,   // 50: GameMsg.CrystalBackPackRs.CrystalList:type_name -> GameMsg.CrystalInfo
	0,   // 51: GameMsg.EquipCrystalRs.ReturnCode:type_name -> GameMsg.ReturnCode
	59,  // 52: GameMsg.SyncPlayerTalentList.List:type_name -> GameMsg.PlayerTalent
	0,   // 53: GameMsg.UpgradePlayerTalentRs.ReturnCode:type_name -> GameMsg.ReturnCode
	63,  // 54: GameMsg.HeroTalentPage.TalentList:type_name -> GameMsg.HeroTalent
	0,   // 55: GameMsg.HeroTalentInfoRs.ReturnCode:type_name -> GameMsg.ReturnCode
	64,  // 56: GameMsg.HeroTalentInfoRs.Pages:type_name -> GameMsg.HeroTalentPage
	0,   // 57: GameMsg.UnlockHeroTalentPageRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 58: GameMsg.ResetHeroTalentPageRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 59: GameMsg.SwitchHeroTalentPageRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 60: GameMsg.UpgradeHeroTalentRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 61: GameMsg.ModifyHeroTalentPageNameRs.ReturnCode:type_name -> GameMsg.ReturnCode
	64,  // 62: GameMsg.SyncHeroValidTalentPage.HerosTalentPage:type_name -> GameMsg.HeroTalentPage
	0,   // 63: GameMsg.ChatRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 64: GameMsg.ChatBlacklistRs.ReturnCode:type_name -> GameMsg.ReturnCode
	87,  // 65: GameMsg.ChatPrivateListRs.PlayerList:type_name -> GameMsg.ChatPlayerState
	0,   // 66: GameMsg.LogInstallRsp.ReturnCode:type_name -> GameMsg.ReturnCode
	21,  // 67: GameMsg.MailInfo.Items:type_name -> GameMsg.Item
	0,   // 68: GameMsg.MailInfoRes.ReturnCode:type_name -> GameMsg.ReturnCode
	94,  // 69: GameMsg.MailInfoRes.Infos:type_name -> GameMsg.MailInfo
	0,   // 70: GameMsg.MailGetDescRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 71: GameMsg.MailDeleteRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 72: GameMsg.MailGetAwardRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 73: GameMsg.RankListRes.ReturnCode:type_name -> GameMsg.ReturnCode
	103, // 74: GameMsg.RankListRes.Infos:type_name -> GameMsg.RankInfo
	103, // 75: GameMsg.RankListRes.My:type_name -> GameMsg.RankInfo
	2,   // 76: GameMsg.LootMission.State:type_name -> GameMsg.LootMission.Status
	0,   // 77: GameMsg.LootMissionListRs.ReturnCode:type_name -> GameMsg.ReturnCode
	105, // 78: GameMsg.LootMissionListRs.List:type_name -> GameMsg.LootMission
	0,   // 79: GameMsg.RewardLootMissionRs.ReturnCode:type_name -> GameMsg.ReturnCode
	21,  // 80: GameMsg.RewardLootMissionRs.Items:type_name -> GameMsg.Item
	4,   // 81: GameMsg.RewardLootMissionRs.CrystalList:type_name -> GameMsg.CrystalInfo
	0,   // 82: GameMsg.GetLootWallRs.ReturnCode:type_name -> GameMsg.ReturnCode
	110, // 83: GameMsg.GetLootWallRs.List:type_name -> GameMsg.LootItem
	110, // 84: GameMsg.PlaceLoot.List:type_name -> GameMsg.LootItem
	0,   // 85: GameMsg.PlaceLootRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 86: GameMsg.ClearLootWallRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 87: GameMsg.ModifyPlayerNameRs.ReturnCode:type_name -> GameMsg.ReturnCode
	0,   // 88: GameMsg.ModifyPlayerIconRs.ReturnCode:type_name -> GameMsg.ReturnCode
	89,  // [89:89] is the sub-list for method output_type
	89,  // [89:89] is the sub-list for method input_type
	89,  // [89:89] is the sub-list for extension type_name
	89,  // [89:89] is the sub-list for extension extendee
	0,   // [0:89] is the sub-list for field type_name
}

func init() { file_msg_proto_init() }
func file_msg_proto_init() {
	if File_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttrItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCheckRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkLoginRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReLoginRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlayerRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamHero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncShip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPlayerBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterStageRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverStageRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRewardStageRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTeamRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroQualityUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroQualityUpRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockUnitRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeUnitRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletedMainlineTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainlineTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMainTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainlineTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskRewardRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseItemRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Explore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExploreRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardUnLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardUnLockRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalBackPack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrystalBackPackRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipCrystal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipCrystalRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerTalent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPlayerTalentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradePlayerTalent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradePlayerTalentRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroTalent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroTalentPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroTalentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroTalentInfoRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockHeroTalentPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockHeroTalentPageRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetHeroTalentPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetHeroTalentPageRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchHeroTalentPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchHeroTalentPageRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeHeroTalent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeHeroTalentRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyHeroTalentPageName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyHeroTalentPageNameRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncHeroValidTalentPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlinePlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerOffline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatBlacklist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelChatBlacklist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatBlacklistRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatPrivateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatPlayerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatPrivateListRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInstallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInstallRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOtherPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOtherPlayerInfoRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailGetDescReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailGetDescRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailDeleteRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailGetAwardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MailGetAwardRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LootMission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LootMissionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LootMissionListRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardLootMission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardLootMissionRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LootItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLootWall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLootWallRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceLoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceLootRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearLootWall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearLootWallRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyPlayerName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyPlayerNameRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyPlayerIcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyPlayerIconRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   118,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_proto_goTypes,
		DependencyIndexes: file_msg_proto_depIdxs,
		EnumInfos:         file_msg_proto_enumTypes,
		MessageInfos:      file_msg_proto_msgTypes,
	}.Build()
	File_msg_proto = out.File
	file_msg_proto_rawDesc = nil
	file_msg_proto_goTypes = nil
	file_msg_proto_depIdxs = nil
}
